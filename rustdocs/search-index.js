var searchIndex = JSON.parse('{\
"constants":{"doc":"Constants used throughout in Vault and Vault-supporting …","t":"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF","n":["ADDRESS_BOOK","ADDRTREE","ALICE_SEED_PHRASE","BACK_COLOR","BORDER","CHUNK_SIZE","COLD_DB_NAME_RELEASE","COLOR","DANGER","DRV","EXPORT_FOLDER","FOLDER","FPS_DEN","FPS_NOM","GENERALVERIFIER","HISTORY","HISTORY_PAGE_SIZE","HOT_DB_NAME","IDENTICON_IMG_SIZE","MAIN_COLOR","MAIN_COLOR_DANGER","MAX_WORDS_DISPLAY","METATREE","META_HISTORY","SCALING","SECONDARY_COLOR","SETTREE","SIGN","SPECSTREE","SPECSTREEPREP","STUB","TRANSACTION","TYPES","VERIFIERS","qr_palette","qr_palette_danger","test_values","alice_sr_0","alice_sr_1","alice_sr_alice","alice_sr_alice_secret_secret","alice_sr_alice_westend","alice_sr_kusama","alice_sr_polkadot","alice_sr_root","alice_sr_secret_abracadabra","alice_sr_secret_path_multipass","alice_sr_westend","alice_sr_westend_0","alice_westend_secret_qr","bob","dock_31","ed","empty_png","id_01","id_02","id_04","id_05","kusama_9130","kusama_9151","shell_200","types_known","types_unknown","westend_9000","westend_9010","westend_9070","westend_9111","westend_9122"],"q":[[0,"constants"],[37,"constants::test_values"]],"d":["Tree name for the tree storing the address book in hot …","Tree name for the tree storing user addresses associated …","Alice seed phrase","Background color for QR codes (both static and animated …","Width of the QR code border, in QR code dots","Data chunk size for fountain QR code generation","Default folder for cold database generated during the …","Default <code>color</code> to be used in generating network specs with …","Key in settings tree <code>SETTREE</code> for Vault danger status","Key in transactions tree <code>TRANSACTION</code> for derivations …","Folder to save completed update messages, for …","Folder to save payloads ready for signing, for …","Denominator of the fraction of time (in seconds) for which …","Numerator of the fraction of time (in seconds) for which …","Key in settings tree <code>SETTREE</code> for general verifier …","Tree name for the tree storing Vault history","Number of entries on log history page","Default folder for hot database","Size of square identicon images.","Main color for QR codes (both static and animated ones)","Main color for <strong>dangerous</strong> QR codes (static only, in Vault)","Maximum number of words displayed to user based on user …","Tree name for the tree storing the network metadata in …","Tree name for the tree storing the network block hash at …","Scaling factor for QR codes (size of QR code dot, in …","Default <code>secondary_color</code> to be used in generating network …","Tree name for the tree storing database settings","Key in transactions tree <code>TRANSACTION</code> for signable …","Tree name for the tree storing the network specs in cold …","Tree name for the tree storing the network specs in hot …","Key in transactions tree <code>TRANSACTION</code> for updates data","Tree name for the tree temporarily storing transaction …","Key in settings tree <code>SETTREE</code> for encoded types information","Tree name for the tree storing the network verifiers …","Color palette for QR codes (both static and animated ones)","Color palette for <strong>dangerous</strong> QR codes (static only, in …","Hexadecimal strings with identicons and qr codes data, as …","Identicon for Alice key with derivation <code>//0</code>, <code>Sr25519</code> …","Identicon for Alice key with derivation <code>//1</code>, <code>Sr25519</code> …","Identicon for Alice key with derivation <code>//Alice</code>, <code>Sr25519</code> …","Identicon for Alice key with derivation …","Identicon for Alice key with derivation <code>//Alice/westend</code>, …","Identicon for Alice key with derivation <code>//kusama</code>, <code>Sr25519</code> …","Identicon for Alice key with derivation <code>//polkadot</code>, <code>Sr25519</code>…","Identicon for Alice root key, <code>Sr25519</code> encryption","Identicon for Alice key with derivation …","Identicon for Alice key with derivation …","Identicon for Alice key with derivation <code>//westend</code>, <code>Sr25519</code> …","Identicon for Alice key with derivation <code>//westend//0</code>, …","Export qr code for root Alice secret in westend network","Identicon for Alice key with derivation <code>//Bob</code>, aka Bob, …","Identicon for <code>dock31</code> metadata hash","Identicon for Alice key with derivation <code>//Alice</code>, <code>Ed25519</code> …","Empty <code>30x30</code> transparent PNG image, used in cases when …","Identicon for test address <code>id_01</code>","Identicon for test address <code>id_02</code>","Identicon for test address <code>id_04</code>","Identicon for test address <code>id_05</code>","Identicon for <code>kusama9130</code> metadata hash","Identicon for <code>kusama9151</code> metadata hash","Identicon for <code>shell200</code> metadata hash","Identicon for hash of types information","Identicon for hash of unknown to the database types …","Identicon for <code>westend9000</code> metadata hash","Identicon for <code>westend9010</code> metadata hash","Identicon for <code>westend9070</code> metadata hash","Identicon for <code>westend9111</code> metadata hash","Identicon for <code>westend9122</code> metadata hash"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],[[2,[1]]]],0,[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]],[[],[[3,[1]]]]],"c":[],"p":[[15,"u8"],[3,"Vec"],[15,"slice"]]},\
"db_handling":{"doc":"This crate deals with standard database-related procedures …","t":"NNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNGNNNNNNNNNNLLLLLAAFFLLLLLLLLLLLLLLLLAALALLLLLLALLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFNEDDDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLMLLLLLMLLLMFFFFFFFFFLLLLLLLFMFFFFFFLFFFFFLLLLLLDNEEDNNDEDEDNNNLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLFLLLLLLLLLLLMMLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMFFFFLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMFFFFLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDRLLLFLLFLLLLLLFLLLFFFLLLLFFFLLLLLLLLFFFFFFLLFFFLLLLLLLLLLLLFFFFFFFFFFF","n":["AddressNotFound","Bip39MnemonicType","ChecksumMismatch","Codec","CustomVerifierIsGeneral","DangerStatusNotFound","DataPacking","DbError","DbTransactionError","DeadVerifier","Defaults","DefinitionsError","DerivationExists","DerivationsNotFound","DifferentBase58Specs","DifferentNamesSameGenesisHash","EmptySeed","EmptySeedName","Error","GeneralVerifierNotFound","HistoryEntryNotFound","InvalidDerivation","KeyCollision","KeyCollisionBatch","LostPwd","MetaValuesNotFound","MissingPasswordInfo","NetworkSpecsKeyForAddressNotFound","NetworkSpecsNotFound","NoKnownSeeds","NoNetworksAvailable","NoRootKeyForSeed","NoSeedForKeyPair","NoValidCurrentVerifier","Other","Qr","Result","SecretExposedMismatch","SecretStringError","SeedNameNotMatching","Sign","Stub","TimeFormat","TwoRootKeys","TypesNotFound","UnexpectedGenesisHash","WrongPassword","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","cold_default","db_transactions","default_cold_release","default_hot","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_ref","helpers","identities","init","interface_signer","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","manage_history","provide","source","to_string","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","address_details","address_details","address_key","address_key","base58_1","base58_2","cropped_path_existing","cropped_path_new","encryption","expected_seed_name","genesis_hash","genesis_hash","genesis_hash","in_this_network","multisigner","multisigner","multisigner","name","name","name1","name2","network_specs_key","network_specs_key","real_seed_name","seed_name","seed_name","seed_name_existing","seed_name_new","version","init_db","populate_cold","populate_cold_nav_test","populate_cold_no_metadata","populate_cold_no_networks","signer_init_no_cert","signer_init_with_cert","Message","SignContent","TrDbCold","TrDbColdSign","TrDbColdSignOne","TrDbColdStub","TrDbHot","Transaction","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add_metadata","add_network_specs","add_types","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","content","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_storage","from_storage","generate","has_pwd","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","multisigner","new","new","new","new_general_verifier","new_history_entry","new_network_verifier","path","remove_metadata","remove_network_specs","remove_types","set_address_book","set_addresses","set_history","set_meta_history","set_metadata","set_metadata","set_network_specs","set_network_specs_prep","set_settings","set_settings","set_transaction","set_verifiers","signing_bulk","size_hint","size_hint","size_hint","size_hint","store_and_get_checksum","store_and_get_checksum","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","extensions","method","SpecsInvariants","adapt_into_using","as_any","as_any_mut","base58prefix","borrow","borrow_mut","deref","deref_mut","drop","first_network_specs_key","from","from_mut","from_ref","genesis_hash","genesis_hash_in_specs","get_address_details","get_all_networks","get_danger_status","get_general_verifier","get_meta_values_by_name_version","get_network_specs","get_types","get_valid_current_verifier","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","make_batch_clear_tree","name","open_tree","prep_types","remove_metadata","remove_network","remove_types_info","transfer_metadata_to_cold","try_from","try_get_address_details","try_get_meta_values_by_name_version","try_get_network_specs","try_get_types","try_get_valid_current_verifier","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","AddrInfo","BadFormat","DerivationCheck","ExportAddrs","ExportAddrsV1","NoPassword","Password","SeedInfo","SignaturesBulk","SignaturesBulkV1","TransactionBulk","TransactionBulkV1","V1","V1","V1","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","address","addrs","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_derivation_set","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_increment_set","create_key_set","cut_path","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derivation_check","derivation_path","derived_keys","drop","drop","drop","drop","drop","drop","drop","drop","drop","dynamic_derivations_response","encode","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded_transactions","encryption","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","export_all_addrs","export_secret_key","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_random_phrase","generate_test_identities","genesis_hash","get_addresses_by_seed_name","get_all_addresses","get_multisigner_by_address","import_all_addrs","init","init","init","init","init","init","init","init","init","inject_derivations_has_pwd","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_passworded","multisigner","name","process_dynamic_derivations_v1","remove_key","remove_keys_set","remove_seed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_create_address","try_create_imported_address","try_create_seed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BIP_CAP","SeedDraft","WORD_LENGTH","__clone_box","adapt_into_using","added","addresses_set_seed_name_network","as_any","as_any_mut","backup_prep","borrow","borrow_mut","clone","clone_into","deref","deref_mut","derive_prep","draft","drop","drop","dynamic_path_check","export_key","first_network","fmt","from","from_mut","from_ref","get_all_seed_names_with_identicons","guess","history_hex_checksum","init","initiate","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","keys_by_seed_name","metadata_details","network_details_by_key","print_all_identities","print_new_seed","purge_transactions","remove","remove_last","show_all_networks","show_all_networks_with_flag","show_types_status","text_field_update","to_owned","try_finalize","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","user_input","vzip","zeroize","clear_history","device_was_online","enter_events","events_to_batch","get_history","get_history_entry_by_order","history_entry_system","history_entry_user","history_total_pages","reset_danger_status_to_safe","seed_name_was_shown"],"q":[[0,"db_handling"],[93,"db_handling::Error"],[122,"db_handling::cold_default"],[129,"db_handling::db_transactions"],[370,"db_handling::db_transactions::SignContent"],[372,"db_handling::helpers"],[423,"db_handling::identities"],[803,"db_handling::interface_signer"],[864,"db_handling::manage_history"]],"d":["<code>AddressDetails</code> for <code>AddressKey</code> in <code>ADDRTREE</code> tree of the …","","Database checksum does not match the expected value.","","Network <code>CurrentVerifier</code> is <code>ValidCurrentVerifier::Custom(_)</code>…","<code>DangerRecord</code> information stored in <code>SETTREE</code> tree of the …","","","","User tried to interact with previously disabled network.","","","Derivation that user tried to create already exists.","Temporary database entry in <code>TRANSACTION</code> tree of the Vault …","Network specs entries have same genesis hash, but …","While searching for all networks with same genesis hash, …","Got empty seed phrase.","Got empty seed name.","DB handling error type.","General verifier <code>Verifier</code> information stored in <code>SETTREE</code> …","History log <code>Entry</code> stored in <code>HISTORY</code> tree of the Vault …","Received <code>derivations</code> update payload contains an invalid …","Same public key was produced for a different seed phrase …","Same public key was produced for a different seed phrase …","User was creating the derivation with password, and thus …","Network metadata in <code>METATREE</code> tree of the Vault database, …","","<code>NetworkSpecsKey</code> of a network in <code>network_id</code> field of the …","<code>OrderedNetworkSpecs</code> for a network in <code>SPECSTREE</code> tree of the …","","","","","","","QR handling error.","DB handling result.","Found <code>secret_exposed</code> flag mismatch in the database: …","Error in <code>SecretString</code>.","To generate QR code with public address information …","Temporary database entry in <code>TRANSACTION</code> tree of the Vault …","Temporary database entry in <code>TRANSACTION</code> tree of the Vault …","","Database has two seed addresses (i.e. with empty …","<code>DangerRecord</code> information stored in <code>SETTREE</code> tree of the …","Network has no entry for <code>CurrentVerifier</code> under <code>verifier_key</code>…","User has entered a wrong password for a passworded address.","","","","","","Making and restoring <strong>cold</strong> database with default content","Atomic transactions in cold and hot databases","Generate or restore “cold” database with default …","Generate or restore “hot” database with default values.","","","","","","","","","","Returns the argument unchanged.","","","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Common helper functions for database operations","Creating, collecting, and removing addresses in cold …","","Utils to communicate with the Vault frontend","Calls <code>U::from(self)</code>.","","","","","","Displaying and updating history log","","","","","","","","","","","","","address key for which the export is done","","","","","","encryption algorithm for which two seed keys were found","seed name, from the navigator","","","","","","","","","network name","","","","","seed name, from the <code>AddressDetails</code>","seed name","","","","network version","Initiate cold database and set up the database general …","Generate initiated test cold database with default …","Generate <strong>not initiated</strong> test cold database for <code>navigator</code> …","Generate initiated test cold database without network …","Generate initiated test cold database with no …","Initiate Vault database with general verifier set up to …","Initiate Vault database with default general verifier …","<code>53xx03</code> text message","Signable transaction content","Cold database transaction data containing <code>Batch</code> elements …","Temporary storage for signable transaction and associated …","","Draft for cold database atomic transaction, constructed …","Hot database transaction data containing <code>Batch</code> elements …","<code>53xx00</code> or <code>53xx02</code> transaction","","","","","","","","Prepare adding the metadata received as <code>load_metadata</code> …","Prepare adding <code>OrderedNetworkSpecs</code> into the cold database:","Prepare adding types information <code>ContentLoadTypes</code> received …","Apply constructed set of batches within <code>TrDbCold</code> to the …","Apply constructed set of batches within <code>TrDbHot</code> to the …","Transform <code>TrDbColdStub</code> into <code>TrDbCold</code> and apply to the …","Use <code>TrDbColdSign</code> to add history log data into the cold …","","","","","","","","","","","","","","","","","","","","","","","","","","","Get transaction content.","","","","","","","","","","","","","","","","","Default value for <code>TrDbCold</code>. Empty.","Default value for <code>TrDbHot</code>. Empty.","Default value for <code>TrDbColdStub</code>. Empty.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Recover <code>TrDbColdStub</code> from storage in the cold database.","Recover <code>TrDbColdSign</code> from storage in the cold database.","Construct <code>TrDbColdSign</code> from components.","Get <code>has_pwd</code> flag.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get <code>MultiSigner</code> value","Construct new empty <code>TrDbCold</code>.","Construct new empty <code>TrDbHot</code>.","Construct new empty <code>TrDbColdStub</code>.","Prepare adding new general verifier <code>Verifier</code> into the cold …","Add new <code>Event</code> in <code>history_stub</code> field of the <code>TrDbColdStub</code>","Prepare adding new network verifier <code>ValidCurrentVerifier</code> …","Get derivation path.","Prepare removing the metadata from the cold database:","Prepare removing <code>OrderedNetworkSpecs</code> from the cold …","Prepare removing types information from the cold database:","Set <code>for_address_book</code> field in <code>TrDbHot</code> with <code>Batch</code> that will …","Set <code>for_addresses</code> field in <code>TrDbCold</code> with <code>Batch</code> that will be","Set <code>for_history</code> field in <code>TrDbCold</code> with <code>Batch</code> that will be …","Set <code>for_meta_history</code> field in <code>TrDbHot</code> with <code>Batch</code> that will …","Set <code>for_metadata</code> field in <code>TrDbCold</code> with <code>Batch</code> that will be …","Set <code>for_metadata</code> field in <code>TrDbHot</code> with <code>Batch</code> that will be …","Set <code>for_network_specs</code> field in <code>TrDbCold</code> with <code>Batch</code> that …","Set <code>for_network_specs_prep</code> field in <code>TrDbHot</code> with <code>Batch</code> that","Set <code>for_settings</code> field in <code>TrDbCold</code> with <code>Batch</code> that will be …","Set <code>for_settings</code> field in <code>TrDbHot</code> with <code>Batch</code> that will be …","Set <code>for_transaction</code> field in <code>TrDbCold</code> with <code>Batch</code> that will …","Set <code>for_verifiers</code> field in <code>TrDbCold</code> with <code>Batch</code> that will be","Bulk of transactions to sign.","","","","","Put SCALE-encoded <code>TrDbColdStub</code> into storage in the …","Put SCALE-encoded <code>TrDbColdSign</code> into storage in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","extensions as raw data","method as raw data","Specs invariants that are expected to stay unchanged for …","","","","","","","","","","network with lowest order, for correct navigation when …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Search for network genesis hash in <code>OrderedNetworkSpecs</code> …","Get <code>AddressDetails</code> from the Vault database, using …","Get <code>OrderedNetworkSpecs</code> for all networks from the cold …","Get the danger status from the Vault database.","Get general verifier <code>Verifier</code> from the Vault database.","Get <code>MetaValues</code>, corresponding to given network name and …","Get network specs <code>OrderedNetworkSpecs</code> from the Vault …","Get types information as <code>Vec&lt;TypeEntry&gt;</code> from the database.","Get <code>ValidCurrentVerifier</code> from the Vault database for a …","","Calls <code>U::from(self)</code>.","","","","","","Assemble a <code>Batch</code> that removes all elements from a tree.","","Open a tree in the database.","Get types information as <code>ContentLoadTypes</code> from the …","Remove the network metadata entry from the database.","Remove the network from the database.","User-initiated removal of the types information from the …","Transfer metadata from the hot database into the cold one.","","Try to get <code>AddressDetails</code> from the Vault database, using …","Try to get <code>MetaValues</code>, corresponding to given network name …","Try to get network specs <code>OrderedNetworkSpecs</code> from the …","Try to get types information from the database.","Try to get <code>ValidCurrentVerifier</code> from the Vault database …","","","","","","","","Derivation has bad format, UI disables proceeding with …","Proposed derivation status.","","","Derivation has no password.","Derivation has password (<code>///&lt;password&gt;</code> part).","","","","","","","","","","","","","","","","","","","","","","","","","","Address in the network.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check derivations before offering user to import them.","","","","","","","","","","","","","","","","","Add a set of new derived addresses: N+1, N+2, etc into …","Creates seed into Vault: add default addresses for …","Separate derivation path with password into non-secret …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Preliminary checks if the user-proposed derivation could …","The derivation path of the key if user provided one","Derived keys.","","","","","","","","","","Prepare <code>DynamicDerivationsAddressResponse</code> for the given …","","","","","","","","","","","","","The type of encryption in the network","","","","","","","","","Export all info about keys and their addresses known to …","Prepare <strong>secret</strong> key export screen struct <code>MKeyDetails</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Generate random phrase with given number of words.","Generate test Alice addresses in test cold database.","Genesis hash","Get all existing addresses for a given seed name from the …","Get all existing addresses from the database.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check derivation format and determine if it has a password.","Public key of the root key.","Name of the seed.","","Remove address from the Vault database.","Remove a set of addresses within a single network from the …","Remove all addresses associated with given seed name from …","","","","","","","","","","","","","","","","","","","","","","","","","Create a new address in the Vault database.","Create a new address in the Vault database and mark it as …","Accept seed into Vault: add default addresses for a seed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum word count in <code>bip39</code> standard.","Zeroizeable seed phrase draft.","Maximum word length in <code>bip39</code> standard.","","","User tries to add the word to the <code>saved</code> field of the …","Get address-associated public data for all addresses from …","","","Prepare seed backup screen struct <code>MBackup</code> for given seed …","","","","","","","Prepare key derivation screen struct <code>MDeriveKey</code>.","Make a <code>String</code> with a seed phrase draft.","","","Return <code>NavDerivationCheck</code> with allowed action details for …","Prepare export key screen struct <code>MKeyDetails</code>.","Sort database networks by the order and get the network …","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Return a <code>Vec</code> with all seed names with seed key identicons …","Get possible options of English <code>bip39</code> words that start …","Get database history tree checksum to be displayed in log …","","Start new <code>SeedDraft</code>","Calls <code>U::from(self)</code>.","","","","","","","Return <code>MManageMetadata</code> with metadata details for network …","Return <code>MNetworkDetails</code> with network specs and metadata set …","Return a <code>Vec</code> with address-associated public data for all …","Generate new random seed phrase, make identicon for <code>sr25519</code>…","Clear transaction tree of the database.","Remove word at given position from the saved seed phrase …","Remove last word from the saved seed phrase draft.","Make <code>Vec</code> with network information for all networks in the …","Return <code>Vec</code> with network information for all networks in …","Make types status display.","Modify <code>SeedDraft</code> with updated <code>user_text</code> from the frontend.","","Combines all draft elements into seed phrase proposal, and …","","","","","","","Output the user input back into user interface.","","","Clear Vault history and make a log <code>Entry</code> that history was …","Process the fact that the Vault device was online.","Enter <code>Event</code> set into the database as a single database …","Timestamp <code>Event</code> set and make with it a new <code>Batch</code>, that …","Get history log contents from the database.","Get from the database a history log <code>Entry</code> by <code>u32</code> order …","Enter system-generated <code>Event</code> into the database.","Enter user-generated <code>Event</code> into the database.","Print total number of pages, for maximum <code>HISTORY_PAGE_SIZE</code> …","Acknowledge that the Vault device was online and reset the …","Record in history log that certain seed was shown on Vault …"],"i":[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,7,0,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,93,94,95,96,97,97,98,98,99,95,100,101,97,98,93,94,102,100,103,101,101,96,93,95,99,104,98,98,103,0,0,0,0,0,0,0,41,0,0,0,0,0,0,41,41,35,36,30,37,42,41,30,30,30,35,36,30,37,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,41,41,42,30,37,42,41,30,37,42,41,30,37,42,41,30,37,42,41,35,36,30,37,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,37,30,37,42,41,35,36,30,37,42,41,35,36,30,37,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,30,37,42,42,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,42,35,36,30,30,30,30,42,30,30,30,36,35,35,36,35,36,35,36,35,36,35,35,37,30,37,42,41,30,37,30,37,42,41,41,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,35,36,30,37,42,41,37,35,36,30,37,42,41,105,105,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,0,56,0,0,0,0,0,0,56,0,0,0,0,0,56,56,56,56,56,56,0,70,0,0,0,70,70,0,0,0,0,0,62,64,66,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,69,67,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,0,62,63,64,65,66,67,68,69,62,63,64,65,66,67,68,69,0,0,0,62,63,64,65,66,67,68,69,62,63,64,65,66,67,68,69,62,63,64,65,66,67,68,69,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,0,69,68,70,62,63,64,65,66,67,68,69,0,63,65,67,62,63,64,65,66,67,68,69,65,69,66,67,68,69,66,67,68,69,0,0,66,67,68,69,70,62,62,63,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,0,0,69,0,0,0,0,70,62,63,64,65,66,67,68,69,0,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,0,68,68,0,0,0,0,62,63,64,65,66,67,68,69,62,63,64,65,66,67,68,69,62,63,64,65,66,67,68,69,0,0,0,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,63,65,67,70,62,63,64,65,66,67,68,69,0,0,0,79,79,79,0,79,79,0,79,79,79,79,79,79,0,79,79,79,0,0,0,79,79,79,79,0,0,0,79,79,79,79,79,79,79,79,0,0,0,0,0,0,79,79,0,0,0,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],0,0,[[[4,[3]]],5],[[[4,[3]]],5],[6],[6],[6],[[7,8],9],[[7,8],9],[10,7],[11,7],[12,7],[13,7],[[]],[14,7],[15,7],[16,7],[17,7],[[]],[[]],0,0,[[],6],0,[[]],[[[19,[18]]],[[19,[2,18]]]],[20,[[20,[2]]]],[21,[[21,[2]]]],[[]],[[]],0,[22],[7,[[4,[23]]]],[[],24],[[],25],[[],25],[[],[[25,[26]]]],[[],27],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,28],5],[[3,28],5],[3,5],[[3,28],5],[[3,28],5],[3,5],[3,5],0,0,0,0,0,0,0,0,[29],[1],[1],[1],[1],[1],[1],[[30,31],30],[[30,3,32,33,28],[[5,[30]]]],[[30,34,28],30],[[35,3],5],[[36,3],5],[[30,3],5],[[37,3,38,39,6],[[5,[40]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,41],[[]],[42,41],[43,[[25,[30,17]]]],[43,[[25,[37,17]]]],[43,[[25,[42,17]]]],[43,[[25,[41,17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[[],35],[[],36],[[],30],[[],37],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[37,[[46,[44]]]],[[30,[0,[47,48]]]],[[37,[0,[47,48]]]],[[42,[0,[47,48]]]],[[41,[0,[47,48]]]],[[35,8],9],[[36,8],9],[[30,8],9],[[37,8],9],[[42,8],9],[[41,8],9],[[]],[[]],[[]],[42,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,40],[[5,[30]]]],[[3,[4,[40]]],[[5,[[4,[37]]]]]],[[41,39,39,38,49,[46,[50]]],42],[42,38],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,49],[[],35],[[],36],[[],30],[[30,28],30],[[30,50],30],[[30,51,33,28],30],[42,24],[[30,31],30],[[30,52,33,28],30],[[30,34,28],30],[[36,53],36],[[35,53],35],[[35,53],35],[[36,53],36],[[35,53],35],[[36,53],36],[[35,53],35],[[36,53],36],[[35,53],35],[[36,53],36],[[35,53],35],[[35,53],35],0,[30,6],[37,6],[42,6],[41,6],[[30,3],[[5,[40]]]],[[37,3],[[5,[40]]]],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[37,54]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[[],2],[[],2],0,[[]],[[]],[6],[6],[6],0,[[]],[[]],[[]],0,[[3,55],[[5,[[4,[56]]]]]],[[3,57],[[5,[58]]]],[3,[[5,[[46,[52]]]]]],[3,[[5,[38]]]],[3,[[5,[28]]]],[[3,39,40],[[5,[31]]]],[[3,59],[[5,[52]]]],[3,[[5,[[46,[60]]]]]],[[3,51],[[5,[33]]]],[[],6],[[]],[[[19,[18]]],[[19,[2,18]]]],[20,[[20,[2]]]],[21,[[21,[2]]]],[[]],[[]],[[3,[45,[44]]],[[5,[53]]]],0,[[3,[45,[44]]],[[5,[61]]]],[3,[[5,[34]]]],[[3,59,40],5],[[3,59],5],[3,5],[[3,3],5],[[],25],[[3,57],[[5,[[4,[58]]]]]],[[3,39,40],[[5,[[4,[31]]]]]],[[3,59],[[5,[[4,[52]]]]]],[3,[[5,[[4,[[46,[60]]]]]]]],[[3,51],[[5,[[4,[33]]]]]],[[],25],[[],[[25,[26]]]],[[],27],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29],[29],[29],[29],[29],[29],[29],[29],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[24]]],5],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,40,49,59,39],5],[[3,39,39,[46,[24]]],5],[39,5],[43,[[25,[62,17]]]],[43,[[25,[63,17]]]],[43,[[25,[64,17]]]],[43,[[25,[65,17]]]],[43,[[25,[66,17]]]],[43,[[25,[67,17]]]],[43,[[25,[68,17]]]],[43,[[25,[69,17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,[45,[44]]],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[[40,43],[[25,[17]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[3,39,39,59],[[5,[70]]]],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[[71,39],[[5,[72]]]],[63,[[46,[44]]]],[65,[[46,[44]]]],[67,[[46,[44]]]],[[62,[0,[47,48]]]],[[63,[0,[47,48]]]],[[64,[0,[47,48]]]],[[65,[0,[47,48]]]],[[66,[0,[47,48]]]],[[67,[0,[47,48]]]],[[68,[0,[47,48]]]],[[69,[0,[47,48]]]],0,0,[[66,66],38],[[67,67],38],[[68,68],38],[[69,69],38],[[],38],[[],38],[[],38],[[],38],[[3,[74,[24,73]]],[[5,[66]]]],[[3,39,39,39,39,[4,[24]]],[[5,[75]]]],[[66,8],9],[[67,8],9],[[68,8],9],[[69,8],9],[[]],[[]],[63,62],[[]],[[[45,[76]]],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[5,[24]]]],[3,5],0,[[3,39],[[5,[46]]]],[3,[[5,[46]]]],[[3,57],[[5,[[4,[49]]]]]],[[3,[46,[77]]],5],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[46,[77]],[74,[24,24]]],[[5,[[46,[77]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,[[5,[38]]]],0,0,[[3,[74,[24,24]],71],[[5,[78]]]],[[3,49,59],5],[[3,[45,[49]],59],5],[[3,39],5],[62,6],[63,6],[64,6],[65,6],[66,6],[67,6],[68,6],[69,6],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[[45,[44]]],[[46,[44,18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,39,39,39,59],5],[[3,39,39,39,59],5],[[3,39,39,38],5],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],[[25,[26]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[63,54]],[[65,54]],[[67,54]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[29],[1],[[79,39,[4,[40]]],38],[[3,39,59],[[5,[46]]]],[[],2],[[],2],[[3,39],[[5,[80]]]],[[]],[[]],[79,79],[[]],[6],[6],[[3,39,4,39,38],[[5,[81]]]],[79,[[46,[24]]]],[79],[6],[[3,39,39,39],82],[[3,49,39,59],[[5,[75]]]],[3,[[5,[[4,[52]]]]]],[[79,8],9],[[]],[[]],[[]],[[3,[45,[24]]],[[5,[[46,[83]]]]]],[39,[[46,[39]]]],[3,[[5,[24]]]],[[],6],[[],79],[[]],[[[19,[18]]],[[19,[2,18]]]],[20,[[20,[2]]]],[21,[[21,[2]]]],[[]],[[]],[[3,39],[[5,[84]]]],[[3,59,40],[[5,[85]]]],[[3,59],[[5,[86]]]],[3,[[5,[[46,[87]]]]]],[39,[[5,[88]]]],[3,5],[[79,40]],[79],[3,[[5,[[46,[89]]]]]],[[3,59],[[5,[90]]]],[3,[[5,[91]]]],[[79,39]],[[]],[79,[[4,[24]]]],[[],25],[[],25],[[],[[25,[26]]]],[[],27],[[]],[[]],[79,39],[[]],[79],[3,5],[3,5],[[3,[46,[50]]],5],[[3,[46,[50]]],[[5,[53]]]],[3,[[5,[46]]]],[[3,40],[[5,[92]]]],[[3,50],5],[[3,39],5],[3,[[5,[40]]]],[3,5],[[3,24],5]],"c":[],"p":[[8,"TransformMatrix"],[8,"Any"],[3,"Db"],[4,"Option"],[6,"Result"],[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"Format"],[3,"Error"],[4,"TransactionError"],[4,"Error"],[4,"ErrorKind"],[4,"Error"],[4,"Error"],[3,"Error"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Demand"],[8,"Error"],[3,"String"],[4,"Result"],[3,"OutOfBounds"],[3,"TypeId"],[3,"Verifier"],[3,"Private"],[3,"TrDbColdStub"],[3,"MetaValues"],[3,"NetworkSpecs"],[4,"ValidCurrentVerifier"],[3,"ContentLoadTypes"],[3,"TrDbCold"],[3,"TrDbHot"],[3,"TrDbColdSign"],[15,"bool"],[15,"str"],[15,"u32"],[4,"SignContent"],[3,"TrDbColdSignOne"],[8,"Input"],[15,"u8"],[15,"slice"],[3,"Vec"],[8,"Output"],[8,"Sized"],[4,"MultiSigner"],[4,"Event"],[3,"VerifierKey"],[3,"OrderedNetworkSpecs"],[3,"Batch"],[8,"FnOnce"],[3,"H256"],[3,"SpecsInvariants"],[3,"AddressKey"],[3,"AddressDetails"],[3,"NetworkSpecsKey"],[3,"TypeEntry"],[3,"Tree"],[4,"SignaturesBulk"],[3,"SignaturesBulkV1"],[4,"TransactionBulk"],[3,"TransactionBulkV1"],[4,"ExportAddrs"],[3,"ExportAddrsV1"],[3,"SeedInfo"],[3,"AddrInfo"],[4,"DerivationCheck"],[3,"DynamicDerivationsAddressRequestV1"],[4,"DynamicDerivationsAddressResponse"],[4,"ExportedSet"],[3,"HashMap"],[3,"MKeyDetails"],[4,"MultiSignature"],[3,"SeedKeysPreview"],[3,"DDPreview"],[3,"SeedDraft"],[3,"MBackup"],[3,"MDeriveKey"],[3,"DerivationCheck"],[3,"SeedNameCard"],[3,"MKeysNew"],[3,"MManageMetadata"],[3,"MNetworkDetails"],[3,"MRawKey"],[3,"MNewSeedBackup"],[3,"MMNetwork"],[3,"MNetworkMenu"],[3,"MTypesInfo"],[3,"Entry"],[13,"DerivationExists"],[13,"SecretExposedMismatch"],[13,"SeedNameNotMatching"],[13,"NetworkSpecsKeyForAddressNotFound"],[13,"DifferentBase58Specs"],[13,"KeyCollisionBatch"],[13,"TwoRootKeys"],[13,"UnexpectedGenesisHash"],[13,"DifferentNamesSameGenesisHash"],[13,"NoSeedForKeyPair"],[13,"MetaValuesNotFound"],[13,"KeyCollision"],[13,"Transaction"]]},\
"defaults":{"doc":"Default data for Vault and Vault-supporting ecosystem.","t":"NRNENNGLLLLLFFFFFFFLLLLLLLLLLLLLLLLLFLFLFLLLLLLLLMMMM","n":["Base58PrefixSpecsMismatch","DEFAULT_VERIFIER_PUBLIC","DefinitionsError","Error","IoError","OrphanMetadata","Result","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","default_address_book","default_chainspecs","default_chainspecs_to_send","default_general_verifier","default_types_content","default_types_vec","default_verifiers","deref","deref_mut","drop","fmt","fmt","from","from","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","nav_test_metadata","provide","release_metadata","source","test_metadata","to_string","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","filename","meta","name","specs"],"q":[[0,"defaults"],[49,"defaults::Error"]],"d":["Base58 prefix from metadata (<code>meta</code>) does not match base58 …","Real Parity public key, with <code>Sr25519</code> encryption","","","","Default metadata set contains metadata files that have no …","","","","","","","Generate address book set for the default networks, for …","Generate network specs <code>OrderedNetworkSpecs</code> set for the …","Generate network specs <code>NetworkSpecs</code> set for the default …","Generate default general verifier <code>Verifier</code>, with Parity …","Generate default types as <code>ContentLoadTypes</code>","Generate default types as <code>TypeEntry</code> set","Generate verifiers set for the default networks, for cold …","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Read metadata set for navigation test cold database from …","","Read metadata set for release cold database from …","","Read metadata set for test cold database from <code>test_metadata</code>…","","","","","","","","","","","",""],"i":[12,0,12,0,12,12,0,12,12,12,12,12,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,0,12,0,12,12,12,12,12,12,12,12,29,30,29,30],"f":[0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[[],[[4,[3]]]],[[],[[4,[5]]]],[[],[[4,[6]]]],[[],7],[[],[[9,[8]]]],[[],[[9,[[4,[10]]]]]],[[],4],[11],[11],[11],[[12,13],14],[[12,13],14],[15,12],[[]],[16,12],[[]],[[]],[[],11],[[]],[[[18,[17]]],[[18,[2,17]]]],[19,[[19,[2]]]],[20,[[20,[2]]]],[[]],[[]],[[],[[9,[[4,[21]]]]]],[22],[[],[[9,[[4,[21]]]]]],[12,[[24,[23]]]],[[],[[9,[[4,[21]]]]]],[[],25],[[],26],[[],26],[[],[[26,[27]]]],[[],28],[[]],[[]],[[]],0,0,0,0],"c":[],"p":[[8,"TransformMatrix"],[8,"Any"],[3,"AddressBookEntry"],[3,"Vec"],[3,"OrderedNetworkSpecs"],[3,"NetworkSpecs"],[3,"Verifier"],[3,"ContentLoadTypes"],[6,"Result"],[3,"TypeEntry"],[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Error"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"MetaValues"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"OutOfBounds"],[3,"TypeId"],[13,"OrphanMetadata"],[13,"Base58PrefixSpecsMismatch"]]},\
"definitions":{"doc":"Definitions and common methods for types used in Vault and …","t":"AAAAAAAAAAAAAAAANNNNENNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNEDENNNNDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDDDEDEDDNNLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNENNNNNENNNNNGNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMENNNNNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNENNNNNNNNNNNNNNEEENNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMNNELLLFLLLLLFLLLFLLLLLLLFFFFFFFFLLLLLFLLNNDENNNNDNNNDDNNNNDDNNDNNNNNNDDNNNNDDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLMMMMMMMMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLFLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMLMMLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLMMDNNDENNNNNNNNNENNNENDDDENDEDDNNNNNNNNNNNNENNENNDNNNNNNNNNNNNNNNNNNNDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEDDDDDDDDDDDDDDDDDDDDNNNENNNNDNNNNNCNNNNNNNNNNNDNNNENNNNNNNENNEENDDNNNNNNNNENNNNENNENNNNNNEDDDENNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMENNNDDDDNNEDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLMMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENDENNNDNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLDLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLMMLLMMLLLLLLLLLLM","n":["crypto","danger","derivations","dynamic_derivations","error","error_active","error_signer","helpers","history","keyring","metadata","navigation","network_specs","qr_transfers","types","users","Ecdsa","Ecdsa","Ed25519","Ed25519","Encryption","Ethereum","Sr25519","Sr25519","SufficientCrypto","__clone_box","__clone_box","adapt_into_using","adapt_into_using","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","identicon_style","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","multi_signature","show","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","verifier_value","vzip","vzip","public","public","public","signature","signature","signature","DangerRecord","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","device_was_online","drop","from","from_ivec","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","safe","set_was_online","store","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","AlreadyExists","BadFormat","DerivedKeyError","DerivedKeyPreview","DerivedKeyStatus","Importable","Invalid","KeySetMissing","NetworkMissing","SeedKeysPreview","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","address","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derivation_path","derived_keys","drop","drop","drop","drop","encryption","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","genesis_hash","has_pwd","identicon","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","multisigner","name","network_title","status","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","errors","DynamicDerivationRequestInfo","DynamicDerivationResponseInfo","DynamicDerivationsAddressRequestV1","DynamicDerivationsAddressResponse","DynamicDerivationsAddressResponseV1","DynamicDerivationsRequest","DynamicDerivationsRequestInfo","DynamicDerivationsResponseInfo","V1","V1","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","addr","addr","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derivation_path","derivation_path","drop","drop","drop","drop","drop","drop","drop","drop","dynamic_derivations","dynamic_derivations","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encryption","encryption","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","multisigner","multisigner","public_key","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddSpecs","Base58PrefixNotDecodeable","Base58PrefixSpecsMismatch","CodecError","EncryptionMismatch","Error","HexDecodingError","Io","LibSecp","LoadMeta","LoadTypes","MetadataError","MetadataError","MetadataMismatch","NoSystemPallet","NoVersionInConstants","NotMeta","Result","RuntimeVersionNotDecodeable","SpecsGenesisHashMismatch","SpecsToSendEncryptionMismatch","SpecsToSendGenesisHash","Ss58","TransferContent","UnableToDecode","UnknownEncryption","VersionIncompatible","Wasm","WrongPublicKeyLength","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","provide","provide","show","source","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","address_key","encryption","encryption","genesis_hash","genesis_hash","network_specs_key","network_specs_key","network_specs_key","that_name","that_version","this_name","this_version","meta","specs","Check","DecodingMetadata","Executor","FaultyMetadata","FaultyMetadata","File","MetadataFile","Wasm","WasmError","adapt_into_using","adapt_into_using","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","provide","source","to_string","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","ArgumentNameError","ArgumentTypeError","BalanceNotDescribed","BitVecFailure","BlockHashTwice","DataTooShort","Decoding","Era","EraTwice","ExtensionsOlder","FundamentallyBadV14Metadata","GeneralVerifierForContent","GenesisHashMismatch","GenesisHashTwice","IdFields","ImmortalHashMismatch","MethodNotFound","Network","NoBlockHash","NoCallsInPallet","NoCompact","NoEra","NoVersionExt","NotBitOrderType","NotBitStoreType","PalletNotFound","ParserDecodingError","ParserError","ParserMetadataError","PrimitiveFailure","SeparateMethodExtensions","SomeDataNotUsedExtensions","SomeDataNotUsedMethod","SpecVersionTwice","Types","UnexpectedCompactInsides","UnexpectedEnumVariant","UnexpectedImmortality","UnexpectedMortality","UnexpectedOptionVariant","UnknownType","V14TypeNotResolved","WrongNetworkVersion","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","name","method_index","pallet_name","as_decoded","in_metadata","Blockies","Dots","IdenticonStyle","adapt_into_using","as_any","as_any_mut","base58_or_eth_to_multisigner","borrow","borrow_mut","deref","deref_mut","drop","ecdsa_public_to_eth_address","from","from_mut","from_ref","get_multisigner","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","make_identicon_from_account","make_identicon_from_id20","make_identicon_from_multisigner","multisigner_to_encryption","multisigner_to_public","pic_meta","pic_types","print_multisigner_as_base58_or_eth","try_from","try_into","try_into_color","type_id","unchecked_into","unhex","unique_saturated_into","vzip","DatabaseInitiated","DeviceWasOnline","Entry","Event","GeneralVerifierSet","HistoryCleared","IdentitiesWiped","IdentityAdded","IdentityHistory","IdentityRemoved","MessageSignError","MessageSigned","MetaValuesDisplay","MetaValuesExport","MetadataAdded","MetadataRemoved","MetadataSigned","NetworkSpecsAdded","NetworkSpecsDisplay","NetworkSpecsExport","NetworkSpecsRemoved","NetworkSpecsSigned","NetworkVerifierDisplay","NetworkVerifierSet","ResetDangerRecord","SecretWasExported","SeedCreated","SeedNameWasShown","SeedRemoved","SignDisplay","SignMessageDisplay","SystemEntry","TransactionSignError","TransactionSigned","TypesAdded","TypesDisplay","TypesExport","TypesRemoved","TypesSigned","UserEntry","Warning","WrongPassword","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all_events_preview","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encryption","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","events","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","general_verifier","general_verifier","genesis_hash","get","get","get","get","get","get","get","get","get","get","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","message","meta_hash","meta_hash","name","name","network","network_genesis_hash","network_name","network_name","new","new","new","new","new","new","path","public_key","seed_name","signed_by","signed_by","signed_by","signed_by","signed_by","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","specs_to_send","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","transaction","transaction_network_encryption","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types_hash","types_hash","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","user_comment","user_comment","valid_current_verifier","valid_current_verifier","verifier","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","identity_history","identity_history","identity_history","meta_values_display","meta_values_display","meta_values_export","network_specs_display","network_specs_display","network_specs_export","network_verifier_display","seed_created","seed_name","seed_name_was_shown","sign_display","sign_display","sign_message_display","sign_message_display","system_entry","types_display","types_display","types_export","user_entry","verifier","warning","AddressBookKey","AddressKey","MetaKey","MetaKeyPrefix","NetworkSpecsKey","Order","VerifierKey","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_hex","from_hex","from_ivec","from_ivec","from_ivec","from_ivec","from_ivec","from_ivec","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_name","from_number","from_parts","from_parts","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_title","genesis_hash","genesis_hash_encryption","get_hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","key","key","key","key","key","multi_signer","name_version","new","prefix","public_key_encryption","size_hint","size_hint","size_hint","stamp","store","title","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddressBookEntry","MetaHistoryEntry","MetaInfo","MetaSetElement","MetaValues","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","address","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_hash","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","convert_wasm_into_metadata","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","def","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode_to","encode_to","encryption","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_entry","from_entry","from_entry","from_entry_checked","from_entry_name_version_checked","from_entry_with_key_parts","from_entry_with_title","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice_metadata","from_str_metadata","from_wasm_file","genesis_hash","info_from_metadata","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","meta","name","name","name","name","name","optional_base58prefix","optional_base58prefix","optional_base58prefix","process_entry","runtime_metadata","runtime_metadata_from_slice","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","version","version","version","version","vzip","vzip","vzip","vzip","vzip","warn_incomplete_extensions","warn_incomplete_extensions","ActionResult","AddSpecs","AddSpecs","Address","AlertData","All","AuthorCard","AuthorPlainCard","AuthorPublicKeyCard","BBananaSplitRecoveryResult","Back","Backup","Backup","BalanceCard","BananaSplitRecoveryResult","BitVecCard","BlockHashCard","CallCard","Card","Confirm","DDDetail","DDKeySet","DDPreview","DecodeSequenceResult","DefaultCard","DerivationCheck","DerivationDestination","DerivationEntry","DerivationPack","Derivations","DerivationsCard","DeriveKey","Documents","Done","DynamicDerivations","EnterPassword","EnumVariantNameCard","EraImmortalCard","EraMortalCard","ErrorCard","ErrorData","ExportedSet","FieldNameCard","FieldNumberCard","FooterButton","H1","H4","History","IdCard","IdentityFieldCard","ImportDerivations","KeyDetails","KeyDetailsAction","KeyDetailsMulti","KeyMenu","Keys","Keys","LoadMeta","LoadMetadata","LoadTypes","LoadTypes","Log","Log","LogComment","LogDetails","LogRight","LogRight","LogScreenEntry","MAddressCard","MBackup","MDeriveKey","MEnterPassword","MEventMaybeDecoded","MKeyAndNetworkCard","MKeyDetails","MKeyDetailsMulti","MKeysCard","MKeysInfoExport","MKeysNew","MLog","MLogDetails","MLogRight","MMMNetwork","MMNetwork","MManageMetadata","MManageNetworks","MMetadataRecord","MNetworkCard","MNetworkDetails","MNetworkMenu","MNewSeed","MNewSeedBackup","MPasswordConfirm","MRawKey","MRecoverSeedName","MRecoverSeedPhrase","MSCCall","MSCContent","MSCCurrency","MSCEnumVariantName","MSCEraMortal","MSCFieldName","MSCFieldNumber","MSCId","MSCNameVersion","MSCNetworkInfo","MSCTip","MSCTxSpecPlain","MSeedMenu","MSeeds","MSettings","MSignSufficientCrypto","MSignatureReady","MSufficientCryptoReady","MTransaction","MTypesInfo","MVerifier","MVerifierDetails","ManageMetadata","ManageNetworks","MetaCard","ModalData","MultiSelect","NDMenu","NNetworkDetails","NameVersionCard","Network","NetworkDetailsMenu","NetworkGenesisHashCard","NetworkInfoCard","NetworkNameCard","NetworkSelector","NetworkSpecs","NewSeed","NewSeed","NewSeedBackup","NewSeedMenu","NewSpecsCard","NonceCard","NoneCard","Other","PalletCard","PasswordConfirm","Past","PathAndNetwork","Pin","Png","Pwd","QrData","Read","Read","RecoverSeedName","RecoverSeedPhrase","RecoveredSeed","Regular","RequestPassword","RightButton","Scan","Scan","ScreenData","ScreenNameType","SeedMenu","SeedNameCard","SeedNameWithIdenticon","SeedSelector","SelectSeed","SelectSeedForBackup","Selected","Sensitive","Settings","Settings","Shield","ShieldAlert","Sign","Sign","SignSufficientCrypto","SignatureReady","SignerImage","Stub","Stub","StubNav","SufficientCryptoReady","Svg","TextCard","TipCard","TipPlainCard","Transaction","TransactionAction","TransactionCard","TransactionCardSet","TransactionSignAction","TransactionType","TxSpecCard","TxSpecPlainCard","TypesInfo","TypesInfo","TypesInfoCard","VVerifier","VarNameCard","VerifierCard","WarningCard","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","address","address","address","address","address_key","address_key","address_key","alert_data","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","author","author_info","author_info","author_info","author_info","back","base58","base58","base58","base58","base58","base58prefix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button_good","card","checksum","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collision","color","content","content","content","counter","cropped_path","current_number","current_on_screen","current_verifier","data","decimals","decoded","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derivation","derivations","derivations","derived_keys_count","details","docs","docs_enum_variant","docs_field_name","docs_field_number","docs_type","docs_type","draft","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encryption","encryption","encryption","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era","error","error","error","event","events","events","events","extensions","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","footer","footer_button","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_hash","guess_set","has_pwd","has_pwd","has_pwd","id_set","identicon","identicon","identicon","identicon","identicon","identicon","identicon","identicon","identities","importing_derivations","indent","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_empty","is_some_already_imported","is_some_network_missing","key","key","key","key_details","key_set","keyboard","keyboard","keyboard","len","log","logo","logo","logo","logo","logo","message","meta","meta","meta_hash","meta_hash","meta_id_pic","meta_id_pic","method","method_name","modal_data","name","name","name","name","name","network","network_genesis_hash","network_info","network_info","network_info","network_info","network_logo","network_logo","network_logo","network_logo","network_logo","network_order","network_specs_key","network_specs_key","network_specs_key","network_title","network_title","networks","networks","networks","new_specs","number","order","order","order","order","order","out_of","path","path","path","path_id","path_id","path_type","path_type","period","phase","pubkey","public_key","public_key","public_key","pwd","qr","qr","ready_seed","right_button","root","screen_data","screen_label","screen_name_type","secondary_color","secret_exposed","seed","seed","seed_name","seed_name","seed_name","seed_name","seed_name","seed_name","seed_name","seed_name","seed_name","seed_name_cards","seed_phrase","selected","set","signatures","signed_by","specname","specs_version","sufficient","swiped","timestamp","timestamp","timestamp","title","title","title","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ttype","ttype","tx_version","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types_hash","types_id_pic","types_info","types_on_file","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unit","units","units","used_in_networks","user_input","verifier","verifier_details","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warning","was_imported","was_imported","where_to","f","f","s","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","b","s","s","s","f","name","pic","types","version","f","f","f","f","f","f","f","f","f","f","f","f","data","data","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","f","image","image","l","n","actions","checksum","content","r","s","stub","u","CurrentVerifier","Custom","Dead","General","NetworkProperties","NetworkSpecs","OrderedNetworkSpecs","ShortSpecs","Standard","Valid","ValidCurrentVerifier","Verifier","VerifierValue","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","base58prefix","base58prefix","base58prefix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","decimals","decimals","decimals","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encryption","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_entry_checked","from_entry_checked","from_entry_with_key_checked","from_entry_with_key_checked","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_hash","genesis_hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","logo","name","name","order","path_id","secondary_color","short","show_card","show_card","show_error","show_error","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","specs","title","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_store","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unit","unit","unit","using_encoded","v","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","v","m","ContentAddSpecs","ContentLoadMeta","ContentLoadTypes","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode","encode","encode_to","encode_to","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_slice","from_slice","from_slice","generate","generate","generate","genesis_hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","meta","meta_genhash","show","size_hint","size_hint","specs","store","to_keyed_vec","to_keyed_vec","to_sign","to_sign","to_sign","to_transfer","to_transfer","to_transfer","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","types","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","write","write","write","Description","Enum","EnumVariant","EnumVariantType","None","Struct","Struct","StructField","Type","Type","TypeEntry","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","field_name","field_type","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","name","size_hint","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","variant_name","variant_type","vzip","vzip","vzip","vzip","vzip","AddressDetails","__clone_box","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","encryption","eq","equivalent","fmt","from","from_entry_with_key_checked","from_mut","from_ref","has_pwd","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","is_root","network_id","path","process_entry_checked","process_entry_with_key_checked","secret_exposed","seed_name","size_hint","to_keyed_vec","to_owned","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","was_imported"],"q":[[0,"definitions"],[16,"definitions::crypto"],[108,"definitions::crypto::SufficientCrypto"],[114,"definitions::danger"],[145,"definitions::derivations"],[294,"definitions::derivations::DerivedKeyStatus"],[295,"definitions::dynamic_derivations"],[633,"definitions::error"],[756,"definitions::error::Error"],[768,"definitions::error::MetadataError"],[770,"definitions::error_active"],[839,"definitions::error_signer"],[987,"definitions::error_signer::GeneralVerifierForContent"],[988,"definitions::error_signer::ParserDecodingError"],[990,"definitions::error_signer::ParserError"],[992,"definitions::helpers"],[1032,"definitions::history"],[1595,"definitions::history::Event"],[1619,"definitions::keyring"],[1897,"definitions::metadata"],[2091,"definitions::navigation"],[5225,"definitions::navigation::AlertData"],[5227,"definitions::navigation::BananaSplitRecoveryResult"],[5228,"definitions::navigation::Card"],[5261,"definitions::navigation::DecodeSequenceResult"],[5264,"definitions::navigation::ExportedSet"],[5265,"definitions::navigation::MSCContent"],[5270,"definitions::navigation::ModalData"],[5282,"definitions::navigation::QrData"],[5284,"definitions::navigation::ScreenData"],[5301,"definitions::navigation::SignerImage"],[5303,"definitions::navigation::StubNav"],[5305,"definitions::navigation::TransactionAction"],[5312,"definitions::network_specs"],[5667,"definitions::network_specs::ValidCurrentVerifier"],[5668,"definitions::network_specs::VerifierValue"],[5669,"definitions::qr_transfers"],[5787,"definitions::types"],[5994,"definitions::users"]],"d":["Encryption-related types with public information","Record of the Vault exposure to dangerous events","","","","Errors occurring on the active side, i.e. while operating …","Errors occurring in Vault","Common helper functions","Types used in Vault history log","Key types and key generation for hot and cold databases","Network metadata and related types","","Network specs, verifiers, and related types","Information that could be send and received through …","Types description needed to decode transactions generated …","Address key associated non-secret information stored in …","","<code>Ecdsa</code> encryption algorithm","","<code>Ed25519</code> encryption algorithm","Encryption algorithm","","","<code>Sr25519</code> encryption algorithm","Data sufficient to generate signed update","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","The style to use for identicons.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get <code>MultiSignature</code> from signature part of <code>SufficientCrypto</code>","Display the encryption","","","","","","","","","","","","","","","","","","","","Get <code>VerifierValue</code> from public key part of <code>SufficientCrypto</code>","","","public key of the signature author","public key of the signature author","public key of the signature author","signature for the data","signature for the data","signature for the data","Danger status in the Vault database","","","","","","","","Get the value of <code>device_was_online</code> flag from <code>DangerRecord</code>.","","Returns the argument unchanged.","Get <code>DangerRecord</code> with content from the encoded value, as …","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","Set danger record to “safe”.","Set <code>device_was_online</code> exposure flag to <code>true</code>.","Transform <code>DangerRecord</code> into <code>Vec&lt;u8&gt;</code> to put in the …","","","","","","","","Key is already into the Vault. Unable to determine for a …","Bad format of the derivation path","","","","Key can be imported into the Vault","","Seed is not in the Vault","Network specs were not imported into the Vault","","","","","","","","","","Address in the network.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The derivation path of the key if user provided one","Derived keys.","","","","","The type of encryption in the network","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Genesis hash","Has to be calculated using <code>inject_derivations_has_pwd</code>. …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Public key of the root key.","Name of the seed.","Might be <code>None</code> if network specs were not imported into the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dynamic derivation path","Dynamic derivation path","","","","","","","","","","","","","","","","","","","","","The type of encryption in the network","The type of encryption in the network","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Genesis hash of the network for the dynamic derivation","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Public key of the root key","Public key of the root key","Public key of the derivation path. The address may be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>add_specs</code> message content","Metadata has <code>SS58Prefix</code> constant in <code>System</code> pallet, but its …","Base58 prefix from metadata (<code>meta</code>) does not match base58 …","","<code>Error</code> when there is encryption mismatch between one of …","","","","","<code>load_metadata</code> message content","<code>load_types</code> message content","Intrinsic problems of the metadata making it unsuitable …","","Network name and/or network version in <code>MetaKey</code> do not …","Metadata does not have <code>System</code> pallet, i.e. there is no …","Metadata does not have <code>Version</code> constant in <code>System</code> pallet, …","Metadata first 4 bytes are not expected <code>b&quot;meta&quot;</code> prelude","","<code>Vec&lt;u8&gt;</code> retrieved from <code>Version</code> constant in <code>System</code> pallet …","<code>NetworkSpecsKey</code> is built using network genesis hash and …","<code>NetworkSpecsKey</code> is built using network genesis hash and …","<code>NetworkSpecsKey</code> is built using network genesis hash and …","","Error decoding transfer content","Metadata body (after <code>b&quot;meta&quot;</code> prelude) could not be decoded …","","Supported are <code>V12</code>, <code>V13</code>, and <code>V14</code> versions of <code>RuntimeMetadata</code>…","","Received public key length is different from the one …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Display <code>TransferContent</code> in readable form","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error checking metadata file","Metadata extracted from <code>wasm</code> file could not be decoded.","Failed to make <code>Metadata_metadata</code> call on data extracted …","Metadata extracted from <code>wasm</code> file is not suitable to be …","Metadata extracted from the metadata file is not suitable …","Error reading <code>wasm</code> file.","Unable to read directory with default metadata","Errors with <code>wasm</code> files processing","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only for <code>RuntimeMetadataV12</code> and <code>RuntimeMetadataV13</code>. …","Only for <code>RuntimeMetadataV12</code> and <code>RuntimeMetadataV13</code>. …","Parser processes certain types as balance (i.e. transforms …","Only for <code>RuntimeMetadataV14</code>. Parser failed to decode …","Metadata extensions have more than one block hash","Parser was expecting more data.","Errors occurring during the decoding procedure.","Only for <code>RuntimeMetadataV14</code>. Parser failed to decode data …","Metadata extensions have more than one <code>Era</code>","Error decoding the extensions using metadata with …","Errors occurring because the metadata <code>RuntimeMetadataV14</code> …","Content that should have been verified by the general …","Genesis hash cut from the end of the transaction does not …","Metadata extensions have more than one genesis hash","Only for <code>RuntimeMetadataV12</code> and <code>RuntimeMetadataV13</code>. …","In immortal transaction the block hash from the extensions …","Used only for <code>RuntimeMetadataV12</code> or <code>RuntimeMetadataV13</code>, …","Network data. Associated data is the network name.","Metadata extensions have no block hash","Only for entry call in <code>RuntimeMetadataV14</code>. Pallet found …","Parser was trying to find an encoded <code>compact</code>, in the bytes …","Metadata extensions have no <code>Era</code>","Metadata extensions have no network metadata version","Only for <code>RuntimeMetadataV14</code>. While decoding <code>BitVec&lt;T,O&gt;</code>, …","Only for <code>RuntimeMetadataV14</code>. While decoding <code>BitVec&lt;T,O&gt;</code>, …","Used only for all calls in <code>RuntimeMetadataV12</code> or …","Errors directly related to transaction parsing","Errors in transaction parsing","Errors occurring because the network metadata …","Parser was unable to decode the data piece into a …","","Only for <code>RuntimeMetadataV14</code>. Parser expects to use all …","Parser expects to use all data in decoding. This error …","Metadata extensions have more than one network metadata …","Types information.","Parser found that type declared as a <code>compact</code> has inner …","SCALE-encoded enum can have as a first byte only correct …","Transaction was announced by the prelude to be mortal (…","Transaction was announced by the prelude to be immortal (…","SCALE-encoded <code>Option&lt;_&gt;</code> can have as a first byte:","Only for <code>RuntimeMetadataV12</code> and <code>RuntimeMetadataV13</code>. Parser …","Only for <code>RuntimeMetadataV14</code>. Found type index could not be …","While parsing transaction with certain version of network …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","index of the method, second byte of the call data","name of the pallet, found from the first byte of the call …","metadata version from transaction extensions, as found …","metadata version actually used for parsing, from the …","Blockies style used in Ethereum networks.","Default style for substrate-based networks, dots in a …","","","","","","","","","","","Turn a <code>ecdsa::Public</code> addr into an Ethereum address.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get <code>MultiSigner</code> from public key and <code>Encryption</code>","","Calls <code>U::from(self)</code>.","","","","","","","","Print identicon from <code>MultiSigner</code>  ","Get <code>Encryption</code> from <code>MultiSigner</code>  ","Get <code>Vec&lt;u8&gt;</code> public key from <code>MultiSigner</code>  ","Print id pic for metadata hash","Print id pic for hash of SCALE-encoded types data","Print <code>MultiSigner</code> in base58 format","","","","","","Decode hexadecimal <code>&amp;str</code> into <code>Vec&lt;u8&gt;</code>, with descriptive …","","","Database was initiated","Vault was online, i.e. the air-gap was broken","History log individual entry","Events that could be recorded in the history log","General verifier was set up","History was cleared","All identities were wiped","User generated a new address","Event content for address generation or removal.","User removed an address","User tried to generate signature for a message, but failed …","User has generated signature for a message","Event content for importing or removing metadata of a …","Event content for generating <code>SufficientCrypto</code> QR code for …","Network metadata was added","Network metadata was removed","User has generated <code>SufficientCrypto</code> with one of Vault …","Network specs were added","Event content for importing or removing network specs  ","Event content for generating <code>SufficientCrypto</code> QR code for …","Network specs were removed","User has generated <code>SufficientCrypto</code> with one of Vault …","Event content for setting network verifier","Network verifier with <code>ValidCurrentVerifier</code> was set for …","User has acknowledged the dangers detected and has reset …","User has generated QR code for secret key export","New seed was created (stored value here is the seed name)","User opened seed backup, and seed phrase for shortly shown …","User removed a seed","History log information about transactions, both …","History log information about messages, both successfully …","System-generated entry into history log","User tried to generate signature for a transaction, but …","User has generated signature for a transaction","Types information was added","Event content for importing or removing types information","Event content for generating <code>SufficientCrypto</code> QR code for …","Types information was removed","User has generated <code>SufficientCrypto</code> with one of Vault …","User has manually added entry to history log","A warning was produces and displayed to user","User has entered wrong password","","","","","","","","","","","","","","","","","","","","","","","","","Test function generating a set of all possible eventscode>Encryption</code> scheme of the seed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Generate <code>MetaValuesDisplay</code> from <code>MetaValues</code>","Generate <code>MetaValuesExport</code> from <code>MetaValues</code> and <code>VerifierValue</code>","Generate <code>NetworkSpecsDisplay</code> from <code>OrderedNetworkSpecs</code>, …","Generate <code>NetworkSpecsExport</code> from <code>NetworkSpecs</code> and …","Generate <code>NetworkVerifierDisplay</code> from <code>VerifierKey</code>, …","Generate <code>TypesDisplay</code> from <code>ContentLoadTypes</code> and types …","Generate <code>TypesExport</code> from <code>ContentLoadTypes</code> and …","Generate <code>IdentityHistory</code> from parts  ","Generate <code>SignDisplay</code> from parts  ","Generate <code>SignMessageDisplay</code> from parts  ","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","decoded message","","","","","","genesis hash of the network within which the address is  ","name for the network in which transaction is generated, as …","name for the network in which message transaction is …","","","","","","","path with soft (<code>/</code>) and hard (<code>//</code>) derivations only, <strong>without</strong> …","Public key.","The name of the seed.","","","<code>VerifierValue</code> of address","address that has generated and signed the transaction  ","address that has generated and signed the message  ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get raw transaction from <code>SignDisplay</code>  ","raw <code>Vec&lt;u8&gt;</code> transaction that user either tried to sign or …","Get raw transaction, network name, and <code>Encryption</code> from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of SCALE-encoded types data","","","","","","","","","","","","","","","","","","","","","","","","","user entered comment for transaction","user entered comment for message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key in <code>ADDRESS_BOOK</code> tree (hot database)","Key in <code>ADDRTREE</code> tree (cold database)","Key in <code>METATREE</code> (cold and hot database) and in <code>META_HISTORY</code>…","Prefix for searching in <code>METATREE</code> (cold and hot database) …","Key in <code>SPECSTREE</code> tree (cold database) and in <code>SPECSPREPTREE</code> …","Key in <code>HISTORY</code> tree (cold database)","Key in <code>VERIFIERS</code> tree (cold database)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Transform hexadecimal <code>String</code> into <code>NetworkSpecsKey</code>","Transform hexadecimal <code>String</code> into <code>AddressKey</code>","Transform database <code>IVec</code> key into <code>NetworkSpecsKey</code> prior to …","Transform database <code>IVec</code> key into <code>VerifierKey</code>  ","Transform database <code>IVec</code> key into <code>AddressKey</code> prior to …","Transform database <code>IVec</code> key into <code>MetaKey</code> prior to …","Transform database <code>IVec</code> key into <code>Order</code>.","Transform database <code>IVec</code> key into <code>AddressBookKey</code> prior to …","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Generate <code>MetaKeyPrefix</code> from network name","Generate <code>Order</code> from <code>u32</code> number","Generate <code>NetworkSpecsKey</code> from parts: network genesis hash …","Generate <code>VerifierKey</code> from network genesis hash","Generate <code>AddressKey</code> from parts: raw public key and …","Generate <code>MetaKey</code> from parts: network name and network …","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Generate <code>AddressBookKey</code> from network address book title","Get genesis hash from the <code>VerifierKey</code>","Get genesis hash as <code>H256</code> and <code>Encryption</code> from …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transform <code>NetworkSpecsKey</code> into <code>Vec&lt;u8&gt;</code> database key  ","Transform <code>VerifierKey</code> into <code>Vec&lt;u8&gt;</code> database key  ","Transform <code>AddressKey</code> into <code>Vec&lt;u8&gt;</code> database key  ","Transform <code>MetaKey</code> into <code>Vec&lt;u8&gt;</code> database key  ","Transform <code>AddressBookKey</code> into <code>Vec&lt;u8&gt;</code> database key  ","Get <code>MultiSigner</code> from the <code>AddressKey</code>  ","Get network name and network version from the <code>MetaKey</code>","Generate <code>AddressKey</code> from corresponding <code>MultiSigner</code> value …","Transform <code>MetaKeyPrefix</code> into <code>Vec&lt;u8&gt;</code> database key prefix  ","Get public key and <code>Encryption</code> from the <code>AddressKey</code>  ","","","","Produce <code>u32</code> number from the <code>Order</code>.","Transform <code>Order</code> into <code>Vec&lt;u8&gt;</code> database key","Get the network address book title from the <code>AddressBookKey</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Network information needed for RPC calls in the network …","<code>META_HISTORY</code> tree entry","Network information extracted from the metadata: name, …","Metadata as checked <code>RuntimeMetadata</code> with network info …","Metadata values: name, version, optional base58 prefix, …","","","","","","","URL address for RPC calls, with or without preferred port","","","","","","","","","","","block hash at which the metadata was fetched, from value","","","","","","","","","","","","","Extracts raw metadata in <code>Vec&lt;u8&gt;</code> format from <code>wasm</code> file.","","","","","","","","","Address book entry is the default one","","","","","","","","","","","","","","","","","","<code>Encryption</code> that is supported by the network  ","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates <code>MetaSetElement</code> from Vault database tree <code>METATREE</code> …","Gets <code>AddressBookEntry</code> from from hot database tree …","From the whole entry","Gets <code>MetaValues</code> from either cold or hot database tree …","Generates <code>MetaValues</code> from value extracted from database …","From the entry with already known key parts","Gets <code>AddressBookEntry</code> from network address book title and …","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Gets <code>MetaValues</code> from raw metadata in <code>Vec&lt;u8&gt;</code> format","Gets <code>MetaValues</code> from raw hexadecimal metadata","Gets <code>MetaValues</code> from <code>wasm</code> file","Network genesis hash","Get <code>MetaInfo</code> from <code>RuntimeMetadata</code>","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","raw metadata","Gets network name","Network name, from metadata <code>Version</code> constant  ","Network name, from metadata <code>Version</code> constant  ","Network name, as it appears in <code>Version</code> constant in metadata","network name, from key","Gets optional base58 prefix, if there is one in the …","Network base58 prefix, could be encountered in metadata …","Network base58 prefix, could be encountered in metadata …","Gets network address book title and <code>AddressBookEntry</code> as a …","Gets runtime metadata, to be used in transcation decoding","Get <code>RuntimeMetadata</code> from slice of raw <code>Vec&lt;u8&gt;</code> metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets network version","Network version, from in metadata <code>Version</code> constant  ","Network version, from in metadata <code>Version</code> constant  ","network metadata version, from key","","","","","","Flag to indicate that extrinsic set from metadata with …","Flag to indicate that extrinsic set from metadata with …","","","","","","","","","","","","","","","","","","","","","","","Dynamic deprivations model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data about signatures that are ready.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enum describing Stub content. Is used for proper …","","","","","","","Enum containing card sets for four different outcomes: …","","","A single transaction signing actionnformation about the signing key of this transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parsed contents of the transaction.","","","","","","","","Get a reference to the underlying dataeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","If this transaction should be signed with a passworded key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codef the underlying data is empty.","","","","","","","","","","","Get the length of the underlying data","","","","","","","","","","","","","","","","","","","","","","","","Info about the network this tx happens on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Frames of the animated QR code that should be displayed by …urrent network verifier","Network has some other verifier, different from the …","Verifier is invalid, Vault would not be able to use the …","Network has general verifier","Network properties that must be fetched with RPC call for …","Network parameters stored SCALE-encoded in the <strong>hot</strong> database","Network parameters stored SCALE-encoded in the <strong>cold</strong> …","Network parameters needed to decode and display transaction","public key for standard substrate-compatible encryption …","Verifier is valid, Vault can use the network","Possible variants of valid current network verifier","Verifier information","Information on known and existing verifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Network-specific prefix for address representation in …","Network-specific prefix for address representation in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Network-associated color. Historically is there, not doing …","Order of magnitude, by which the token unit exceeds the …","Order of magnitude, by which the token unit exceeds the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encryption algorithm the network uses  ","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets <code>OrderedNetworkSpecs</code> from cold database tree <code>SPECSTREE</code> …","Gets <code>NetworkSpecs</code> from hot database tree <code>SPECSTREEPREP</code> …","Gets <code>OrderedNetworkSpecs</code> from <code>NetworkSpecsKey</code> and …","Gets <code>NetworkSpecs</code> from <code>NetworkSpecsKey</code> and associated …","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Network genesis hash  ","Network genesis hash  ","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Network associated logo  ","Network name, as it appears in network metadata  ","Network name, as it appears in network metadata  ","Order in which the network is displayed by Vault","Default derivation path for addresses in this network  ","Network-associated secondary color. Historically is there, …","Makes <code>ShortSpecs</code> from <code>NetworkSpecs</code>","Get the <code>MVerifierDetails</code> for UI to show.","Get the <code>MVerifierDetails</code> for UI to show.","Display <code>Verifier</code> in human-readable format, for errors  ","Display <code>VerifierValue</code> in human-readable format, for errors …","","","","","","","","","","Network title, as it appears in Vault menus.","","","","","","","","","","","","","","","","Makes <code>OrderedNetworkSpecs</code> from <code>NetworkSpecs</code>, needs <code>order</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Token name, to display balance-related values properly.  ","Token name, to display balance-related values properly.  ","","","","","","","","","","","","","","<code>add_specs</code> QR code content","<code>load_metadata</code> QR code content","<code>load_types</code> QR code content","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Transform <code>&amp;[u8]</code> slice into <code>ContentLoadMeta</code>.","Transform <code>&amp;[u8]</code> slice into <code>ContentAddSpecs</code>.","Transform <code>&amp;[u8]</code> slice into <code>ContentLoadTypes</code>.  ","Generate <code>ContentLoadMeta</code> from metadata <code>&amp;[u8]</code> slice and …","Generate <code>ContentAddSpecs</code> from network specs <code>NetworkSpecs</code>.","Generate <code>ContentLoadTypes</code> from types information …","Get genesis hash <code>[u8; 32]</code> from <code>ContentLoadMeta</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Get metadata <code>Vec&lt;u8&gt;</code> from <code>ContentLoadMeta</code>.","Get metadata <code>Vec&lt;u8&gt;</code> and genesis hash <code>[u8; 32]</code> from …","Generate types information hash and corresponding id pic","","","Get network specs <code>NetworkSpecs</code> from <code>ContentAddSpecs</code>.","Transform <code>ContentLoadTypes</code> into <code>Vec&lt;u8&gt;</code> to be put in the …","","","Transform <code>ContentLoadMeta</code> into <code>Vec&lt;u8&gt;</code> that could be …","Transform <code>ContentAddSpecs</code> into <code>Vec&lt;u8&gt;</code> that could be …","Transform <code>ContentLoadTypes</code> into <code>Vec&lt;u8&gt;</code> that could be …","Transform <code>ContentLoadMeta</code> into <code>Vec&lt;u8&gt;</code> that is …","Transform <code>ContentAddSpecs</code> into <code>Vec&lt;u8&gt;</code> that is …","Transform <code>ContentLoadTypes</code> into <code>Vec&lt;u8&gt;</code> that is …","","","","","","","","","","","","","Get types information <code>Vec&lt;TypeEntry&gt;</code> from <code>ContentLoadTypes</code>…","","","","","","","","","","","","Write <code>ContentLoadMeta</code> into file that could be signed by …","Write <code>ContentAddSpecs</code> into file that could be signed by …","Write <code>ContentLoadTypes</code> into file that could be signed by …","Type description","type is an enum","Enum variant description","Types of enum variants","","type is a struct","","Struct field description","type is a type alias","","Information each type has to have: type name and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type description","","","","","","","","","","","","","","","","","","","","","struct field name, if it exists, it will be displayed …","field type","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","type name, as it appears in the metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","enum variant name, will be displayed during the parsing if …","variant type","","","","","","Address key associated non-secret information stored in …","","","","","","","","","","","","","","","","","encryption algorithm associated with the address key and …","","","","Returns the argument unchanged.","Gets <code>AddressDetails</code> from <code>AddressKey</code> and associated value …","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","whether the address key has an associated password  ","","Calls <code>U::from(self)</code>.","","","","","","Checks if the <code>AddressDetails</code> have empty derivation path …","set of networks, identified through <code>NetworkSpecsKey</code>, that …","derivation path, only with soft (<code>/</code>) and hard (<code>//</code>) …","Gets (<code>MultiSigner</code>, <code>AddressDetails</code>) tuple from database …","Gets (<code>MultiSigner</code>, <code>AddressDetails</code>) tuple from <code>AddressKey</code> …","address, or its parent address, had or could have secret …","seed name (as it is known to the Vault device)","","","","","","","","","","","whether the address key is imported from the external …"],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[2],[2],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[4,4],[5,5],[[]],[[]],[6,[[8,[4,7]]]],[6,[[8,[5,7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[12],[12],[12],[12],[12],[12],[[4,[0,[13,14]]]],[[5,[0,[13,14]]]],[[4,4],15],[[5,5],15],[[],15],[[],15],[[4,16],17],[[5,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[4,18],[[],12],[[],12],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[5,23],[4,24],[4,12],[5,12],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[]],[[]],[24,[[8,[4]]]],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[]],[[]],[[]],[[]],[5,28],[[]],[[]],0,0,0,0,0,0,0,[2],[[],3],[[],3],[[]],[[]],[12],[12],[29,[[30,[15]]]],[12],[[]],[31,29],[[]],[[]],[[],12],[[]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[],29],[[],29],[29,[[25,[9]]]],[[],8],[[],8],[[],[[8,[26]]]],[[],27],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[2],[2],[2],[2],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[33,33],[34,34],[35,35],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],0,0,[12],[12],[12],[12],0,[[32,32],15],[[33,33],15],[[34,34],15],[[35,35],15],[[],15],[[],15],[[],15],[[],15],[[32,16],17],[[33,16],17],[[34,16],17],[[35,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[2],[2],[2],[2],[2],[2],[2],[2],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[8,[36,7]]]],[6,[[8,[37,7]]]],[6,[[8,[38,7]]]],[6,[[8,[39,7]]]],[6,[[8,[40,7]]]],[6,[[8,[41,7]]]],[6,[[8,[42,7]]]],[6,[[8,[43,7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,0,[12],[12],[12],[12],[12],[12],[12],[12],0,0,[37,[[25,[9]]]],[41,[[25,[9]]]],[[36,[0,[13,14]]]],[[37,[0,[13,14]]]],[[38,[0,[13,14]]]],[[39,[0,[13,14]]]],[[40,[0,[13,14]]]],[[41,[0,[13,14]]]],[[42,[0,[13,14]]]],[[43,[0,[13,14]]]],0,0,[[36,36],15],[[37,37],15],[[38,38],15],[[39,39],15],[[40,40],15],[[41,41],15],[[42,42],15],[[43,43],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[36,16],17],[[37,16],17],[[38,16],17],[[39,16],17],[[40,16],17],[[41,16],17],[[42,16],17],[[43,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[36,12],[37,12],[38,12],[39,12],[40,12],[41,12],[42,12],[43,12],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[37,44]],[[41,44]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[45,45],15],[[46,16],17],[[46,16],17],[[47,16],17],[[45,16],17],[[45,16],17],[[]],[7,46],[48,46],[49,46],[45,46],[50,46],[51,46],[52,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[53],[53],[47,24],[46,[[55,[54]]]],[[],24],[[],24],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],[2],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[[52,16],17],[[52,16],17],[[56,16],17],[[]],[57,52],[58,52],[45,52],[50,52],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[53],[52,[[55,[54]]]],[[],24],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[59,59],15],[[59,16],17],[[60,16],17],[[61,16],17],[[62,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[2],[[],3],[[],3],[[63,4],[[30,[64]]]],[[]],[[]],[12],[12],[12],[65,[[30,[66]]]],[[]],[[]],[[]],[[[10,[9]],4],[[30,[64]]]],[[],12],[[]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[[]],[[]],[67,68],[[[69,[9]]],68],[[64,18],68],[64,4],[64,[[25,[9]]]],[[[10,[9]]],68],[[[10,[9]]],68],[[64,[55,[70]],4],24],[[],8],[[],8],[[],[[8,[26]]]],[[],27],[[]],[63,[[30,[[25,[9]]]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[25,[71]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[71,71],[82,82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[8,[72,7]]]],[6,[[8,[73,7]]]],[6,[[8,[74,7]]]],[6,[[8,[75,7]]]],[6,[[8,[76,7]]]],[6,[[8,[77,7]]]],[6,[[8,[78,7]]]],[6,[[8,[79,7]]]],[6,[[8,[80,7]]]],[6,[[8,[81,7]]]],[6,[[8,[71,7]]]],[6,[[8,[82,7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[72,[0,[13,14]]]],[[73,[0,[13,14]]]],[[74,[0,[13,14]]]],[[75,[0,[13,14]]]],[[76,[0,[13,14]]]],[[77,[0,[13,14]]]],[[78,[0,[13,14]]]],[[79,[0,[13,14]]]],[[80,[0,[13,14]]]],[[81,[0,[13,14]]]],[[71,[0,[13,14]]]],[[82,[0,[13,14]]]],0,[[72,72],15],[[73,73],15],[[74,74],15],[[75,75],15],[[76,76],15],[[77,77],15],[[78,78],15],[[79,79],15],[[80,80],15],[[81,81],15],[[71,71],15],[[82,82],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[72,16],17],[[73,16],17],[[74,16],17],[[75,16],17],[[76,16],17],[[77,16],17],[[78,16],17],[[79,16],17],[[80,16],17],[[81,16],17],[[71,16],17],[[82,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[83,72],[[83,28],73],[[84,85,86],74],[[87,28],75],[[88,85,86],76],[[89,86],77],[[89,28],78],[[63,4,[10,[9]],63,90],79],[[[10,[9]],63,28,63],80],[[63,63,28,63],81],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[24,11,90],72],[[24,11,90,28],73],[[90,86],77],[[90,28],78],[[24,4,[25,[9]],24,90],79],[[[25,[9]],24,28,24],80],0,0,0,0,0,0,0,0,[72,12],[73,12],[74,12],[75,12],[76,12],[77,12],[78,12],[79,12],[80,12],[81,12],[71,12],[82,12],0,0,[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,[[25,[9]]]],0,[80],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[2],[2],[2],[2],[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,91],[88,88],[92,92],[93,93],[94,94],[95,95],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[8,[91,7]]]],[6,[[8,[88,7]]]],[6,[[8,[92,7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[91,[[25,[9]]]],[88,[[25,[9]]]],[[91,[0,[13,14]]]],[[88,[0,[13,14]]]],[[92,[0,[13,14]]]],[[91,91],15],[[88,88],15],[[92,92],15],[[94,94],15],[[],15],[[],15],[[],15],[[],15],[[91,16],17],[[88,16],17],[[92,16],17],[[93,16],17],[[96,16],17],[[94,16],17],[[95,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,[[30,[91]]]],[63,[[30,[92]]]],[31,91],[31,[[30,[88]]]],[31,[[30,[92]]]],[31,93],[31,[[30,[94]]]],[31,95],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,96],[11,94],[[90,4],91],[90,88],[[[10,[9]],4,[55,[90]]],[[30,[92]]]],[[63,11],93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,95],[88,90],[91,30],[[[0,[97,14]],98],99],[[91,100]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,[[25,[9]]]],[88,[[25,[9]]]],[92,[[25,[9]]]],[93,[[25,[9]]]],[95,[[25,[9]]]],[92,64],[93,30],[[64,[55,[90]]],92],[96,[[25,[9]]]],[92,30],[91,12],[88,12],[92,12],[94,11],[94,[[25,[9]]]],[95,[[30,[24]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[91,44]],[[88,44]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[2],[2],[2],[2],[2],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[[]],[63,[[30,[[25,[9]]]]]],[6,[[8,[101,7]]]],[6,[[8,[102,7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[101,[0,[13,14]]]],[[102,[0,[13,14]]]],0,[[101,101],15],[[83,83],15],[[102,102],15],[[103,103],15],[[],15],[[],15],[[],15],[[],15],[[83,16],17],[[102,16],17],[[103,16],17],[[]],[[]],[[]],[[]],[[]],[[],[[30,[104]]]],[[],[[30,[102]]]],[[],[[30,[103]]]],[[],[[30,[83]]]],[[63,11,31],[[30,[83]]]],[[63,11,31],[[30,[103]]]],[[63,31],[[30,[102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[30,[83]]]],[63,[[30,[83]]]],[63,[[30,[83]]]],0,[105,[[30,[101]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[104,24],0,0,0,0,[104,[[55,[70]]]],0,0,[[],30],[104,105],[[[10,[9]]],[[30,[105]]]],[101,12],[102,12],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,11],0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[68,68],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[156,[[10,[9]]]],0,0,[[],118],[[],121],[[],122],[[],131],[[],139],[[],140],[[],144],[[],145],[[],68],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,0,0,0,0,0,0,0,0,0,0,0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,0,0,[[106,106],15],[[107,107],15],[[108,108],15],[[109,109],15],[[110,110],15],[[111,111],15],[[112,112],15],[[113,113],15],[[114,114],15],[[115,115],15],[[116,116],15],[[117,117],15],[[118,118],15],[[119,119],15],[[120,120],15],[[121,121],15],[[122,122],15],[[123,123],15],[[124,124],15],[[125,125],15],[[126,126],15],[[127,127],15],[[128,128],15],[[129,129],15],[[130,130],15],[[131,131],15],[[132,132],15],[[133,133],15],[[134,134],15],[[135,135],15],[[136,136],15],[[137,137],15],[[138,138],15],[[139,139],15],[[140,140],15],[[141,141],15],[[142,142],15],[[143,143],15],[[144,144],15],[[145,145],15],[[146,146],15],[[147,147],15],[[148,148],15],[[149,149],15],[[150,150],15],[[151,151],15],[[152,152],15],[[153,153],15],[[154,154],15],[[155,155],15],[[156,156],15],[[157,157],15],[[158,158],15],[[159,159],15],[[160,160],15],[[161,161],15],[[162,162],15],[[163,163],15],[[164,164],15],[[165,165],15],[[166,166],15],[[167,167],15],[[168,168],15],[[169,169],15],[[170,170],15],[[171,171],15],[[172,172],15],[[173,173],15],[[174,174],15],[[175,175],15],[[176,176],15],[[177,177],15],[[178,178],15],[[68,68],15],[[179,179],15],[[180,180],15],[[181,181],15],[[182,182],15],[[183,183],15],[[184,184],15],[[185,185],15],[[186,186],15],[[187,187],15],[[188,188],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,0,0,0,[[107,16],17],[[108,16],17],[[109,16],17],[[110,16],17],[[111,16],17],[[112,16],17],[[113,16],17],[[114,16],17],[[115,16],17],[[117,16],17],[[118,16],17],[[119,16],17],[[120,16],17],[[121,16],17],[[122,16],17],[[123,16],17],[[124,16],17],[[125,16],17],[[126,16],17],[[127,16],17],[[128,16],17],[[129,16],17],[[130,16],17],[[131,16],17],[[132,16],17],[[133,16],17],[[134,16],17],[[135,16],17],[[136,16],17],[[137,16],17],[[138,16],17],[[139,16],17],[[140,16],17],[[141,16],17],[[142,16],17],[[143,16],17],[[144,16],17],[[145,16],17],[[146,16],17],[[147,16],17],[[148,16],17],[[149,16],17],[[150,16],17],[[151,16],17],[[152,16],17],[[153,16],17],[[154,16],17],[[155,16],17],[[156,16],17],[[157,16],17],[[158,16],17],[[159,16],17],[[160,16],17],[[161,16],17],[[162,16],17],[[163,16],17],[[164,16],17],[[165,16],17],[[166,16],17],[[167,16],17],[[168,16],17],[[169,16],17],[[170,16],17],[[171,16],17],[[172,16],17],[[173,16],17],[[174,16],17],[[175,16],17],[[176,16],17],[[177,16],17],[[178,16],17],[[68,16],17],[[179,16],17],[[180,16],17],[[181,16],17],[[182,16],17],[[183,16],17],[[184,16],17],[[185,16],17],[[186,16],17],[[187,16],17],[[188,16],17],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,181],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[156,15],0,0,0,0,0,0,0,0,0,0,[156,12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],0,0,0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[2],[2],[2],[2],[2],[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[87,87],[189,189],[86,86],[28,28],[190,190],[85,85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[6,[[8,[84,7]]]],[6,[[8,[87,7]]]],[6,[[8,[189,7]]]],[6,[[8,[191,7]]]],[6,[[8,[86,7]]]],[6,[[8,[28,7]]]],[6,[[8,[190,7]]]],[6,[[8,[85,7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[86,[[25,[9]]]],[[84,[0,[13,14]]]],[[87,[0,[13,14]]]],[[189,[0,[13,14]]]],[[191,[0,[13,14]]]],[[86,[0,[13,14]]]],[[28,[0,[13,14]]]],[[190,[0,[13,14]]]],[[85,[0,[13,14]]]],0,[[84,84],15],[[87,87],15],[[189,189],15],[[191,191],15],[[86,86],15],[[28,28],15],[[190,190],15],[[85,85],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[84,16],17],[[87,16],17],[[189,16],17],[[191,16],17],[[86,16],17],[[28,16],17],[[190,16],17],[[85,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[30,[84]]]],[[],[[30,[87]]]],[[91,31],[[30,[84]]]],[[91,31],[[30,[87]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[87,189],[86,144],[28,144],[86,24],[28,24],[84,12],[87,12],[189,12],[191,12],[86,12],[28,12],[190,12],[85,12],0,0,[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[87,9],84],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[86,44]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[8,[192,7]]]],[6,[[8,[89,7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[192,[[25,[9]]]],[89,[[25,[9]]]],[[192,[0,[13,14]]]],[[89,[0,[13,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],193],[[[10,[9]]],192],[[[10,[9]]],89],[[[10,[9]],90],193],[87,192],[[[10,[194]]],89],[193,[[30,[90]]]],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[193,[[30,[[25,[9]]]]]],[193,30],[89],[192,12],[89,12],[192,[[30,[87]]]],[89,[[25,[9]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[193,[[25,[9]]]],[192,[[25,[9]]]],[89,[[25,[9]]]],[193,[[25,[9]]]],[192,[[25,[9]]]],[89,[[25,[9]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[89,[[30,[[25,[194]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[192,44]],[[89,44]],[[]],[[]],[[]],[[193,[196,[195]]],30],[[192,[196,[195]]],30],[[89,[196,[195]]],30],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[2],[2],[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[194,194],[197,197],[198,198],[199,199],[200,200],[[]],[[]],[[]],[[]],[[]],[6,[[8,[194,7]]]],[6,[[8,[197,7]]]],[6,[[8,[198,7]]]],[6,[[8,[199,7]]]],[6,[[8,[200,7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[[11,6],[[8,[7]]]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,[12],[12],[12],[12],[12],[[194,[0,[13,14]]]],[[197,[0,[13,14]]]],[[198,[0,[13,14]]]],[[199,[0,[13,14]]]],[[200,[0,[13,14]]]],[[194,194],15],[[197,197],15],[[198,198],15],[[199,199],15],[[200,200],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[194,12],[197,12],[198,12],[199,12],[200,12],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[[10,[9]]],[[25,[9,19]]]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],[[8,[26]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,[1],[2],[[],3],[[],3],[[]],[[]],[201,201],[[]],[6,[[8,[201,7]]]],[[[10,[9]]],[[8,[7]]]],[[11,[10,[9]]],[[8,[7]]]],[[11,6],[[8,[7]]]],[12],[12],[12],[[201,[0,[13,14]]]],0,[[201,201],15],[[],15],[[201,16],17],[[]],[[92,31],[[30,[201]]]],[[]],[[]],0,[[],12],[[]],[[[20,[19]]],[[20,[3,19]]]],[21,[[21,[3]]]],[22,[[22,[3]]]],[[]],[[]],[201,15],0,0,[[],30],[[92,31],30],0,0,[201,12],[[[10,[9]]],[[25,[9,19]]]],[[]],[[],8],[[],8],[[],[[8,[26]]]],[[],27],[[]],[[]],[[]],0],"c":[],"p":[[3,"Private"],[8,"TransformMatrix"],[8,"Any"],[4,"Encryption"],[4,"SufficientCrypto"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"u8"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"IdenticonStyle"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"MultiSignature"],[3,"String"],[3,"Vec"],[3,"OutOfBounds"],[3,"TypeId"],[4,"VerifierValue"],[3,"DangerRecord"],[6,"Result"],[3,"IVec"],[3,"SeedKeysPreview"],[3,"DerivedKeyPreview"],[4,"DerivedKeyStatus"],[4,"DerivedKeyError"],[4,"DynamicDerivationsRequest"],[3,"DynamicDerivationsAddressRequestV1"],[3,"DynamicDerivationsRequestInfo"],[3,"DynamicDerivationRequestInfo"],[4,"DynamicDerivationsAddressResponse"],[3,"DynamicDerivationsAddressResponseV1"],[3,"DynamicDerivationsResponseInfo"],[3,"DynamicDerivationResponseInfo"],[8,"FnOnce"],[4,"MetadataError"],[4,"Error"],[4,"TransferContent"],[4,"Error"],[4,"PublicError"],[3,"Error"],[4,"FromHexError"],[4,"Wasm"],[3,"Demand"],[8,"Error"],[4,"Option"],[4,"Check"],[4,"Error"],[4,"WasmError"],[4,"GeneralVerifierForContent"],[4,"ParserError"],[4,"ParserDecodingError"],[4,"ParserMetadataError"],[15,"str"],[4,"MultiSigner"],[3,"Public"],[3,"H160"],[3,"AccountId32"],[4,"SignerImage"],[15,"array"],[15,"u16"],[4,"Event"],[3,"MetaValuesDisplay"],[3,"MetaValuesExport"],[3,"NetworkSpecsDisplay"],[3,"NetworkSpecsExport"],[3,"NetworkVerifierDisplay"],[3,"TypesDisplay"],[3,"TypesExport"],[3,"IdentityHistory"],[3,"SignDisplay"],[3,"SignMessageDisplay"],[3,"Entry"],[3,"MetaValues"],[3,"OrderedNetworkSpecs"],[4,"ValidCurrentVerifier"],[3,"Verifier"],[3,"NetworkSpecs"],[3,"VerifierKey"],[3,"ContentLoadTypes"],[3,"H256"],[3,"NetworkSpecsKey"],[3,"AddressKey"],[3,"MetaKey"],[3,"Order"],[3,"AddressBookKey"],[3,"MetaKeyPrefix"],[8,"Hash"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[3,"MetaInfo"],[3,"AddressBookEntry"],[3,"MetaHistoryEntry"],[3,"MetaSetElement"],[4,"RuntimeMetadata"],[3,"SeedNameWithIdenticon"],[3,"TransactionSignAction"],[4,"TransactionAction"],[4,"StubNav"],[4,"FooterButton"],[4,"RightButton"],[4,"ScreenNameType"],[4,"ShieldAlert"],[4,"AlertData"],[3,"ActionResult"],[3,"LogScreenEntry"],[4,"ScreenData"],[3,"MKeysCard"],[3,"MKeysNew"],[3,"MKeyAndNetworkCard"],[3,"MNetworkCard"],[3,"MSettings"],[3,"History"],[3,"MLog"],[3,"MEventMaybeDecoded"],[3,"MLogDetails"],[4,"TransactionType"],[3,"TransactionCard"],[4,"BananaSplitRecoveryResult"],[4,"DecodeSequenceResult"],[3,"TransactionCardSet"],[3,"MTransaction"],[3,"SeedNameCard"],[3,"MSeeds"],[3,"MKeyDetails"],[3,"MNewSeed"],[3,"MRecoverSeedName"],[3,"MRecoverSeedPhrase"],[3,"DerivationCheck"],[3,"Address"],[3,"MAddressCard"],[4,"DerivationDestination"],[3,"MDeriveKey"],[3,"MVerifierDetails"],[3,"MVerifier"],[3,"MMetadataRecord"],[3,"MNetworkDetails"],[3,"MRawKey"],[3,"MSignSufficientCrypto"],[3,"MKeyDetailsMulti"],[3,"MMNetwork"],[3,"MManageNetworks"],[4,"ExportedSet"],[3,"PathAndNetwork"],[4,"MSCContent"],[4,"QrData"],[3,"MSufficientCryptoReady"],[3,"DerivationEntry"],[3,"DerivationPack"],[3,"MBackup"],[3,"MSeedMenu"],[3,"MNewSeedBackup"],[3,"Network"],[3,"MNetworkMenu"],[3,"MPasswordConfirm"],[3,"MSignatureReady"],[3,"MEnterPassword"],[3,"MLogRight"],[3,"MMMNetwork"],[3,"MManageMetadata"],[3,"MTypesInfo"],[4,"ModalData"],[3,"MSCCall"],[3,"MSCCurrency"],[3,"MSCEnumVariantName"],[3,"MSCEraMortal"],[3,"MSCFieldName"],[3,"MSCFieldNumber"],[3,"MSCId"],[3,"MSCNameVersion"],[3,"MSCNetworkInfo"],[3,"DDPreview"],[3,"DDKeySet"],[3,"DDDetail"],[3,"MSCTip"],[3,"MSCTxSpecPlain"],[3,"MKeysInfoExport"],[4,"Card"],[3,"ShortSpecs"],[4,"CurrentVerifier"],[3,"NetworkProperties"],[3,"ContentAddSpecs"],[3,"ContentLoadMeta"],[3,"TypeEntry"],[3,"Path"],[8,"AsRef"],[4,"Description"],[3,"EnumVariant"],[4,"EnumVariantType"],[3,"StructField"],[3,"AddressDetails"],[13,"Ed25519"],[13,"Sr25519"],[13,"Ecdsa"],[13,"Invalid"],[13,"EncryptionMismatch"],[13,"SpecsToSendEncryptionMismatch"],[13,"SpecsGenesisHashMismatch"],[13,"SpecsToSendGenesisHash"],[13,"MetadataMismatch"],[13,"Base58PrefixSpecsMismatch"],[13,"Network"],[13,"MethodNotFound"],[13,"WrongNetworkVersion"],[13,"IdentityAdded"],[13,"IdentityRemoved"],[13,"SecretWasExported"],[13,"MetadataAdded"],[13,"MetadataRemoved"],[13,"MetadataSigned"],[13,"NetworkSpecsAdded"],[13,"NetworkSpecsRemoved"],[13,"NetworkSpecsSigned"],[13,"NetworkVerifierSet"],[13,"SeedCreated"],[13,"SeedRemoved"],[13,"SeedNameWasShown"],[13,"TransactionSigned"],[13,"TransactionSignError"],[13,"MessageSigned"],[13,"MessageSignError"],[13,"SystemEntry"],[13,"TypesAdded"],[13,"TypesRemoved"],[13,"TypesSigned"],[13,"UserEntry"],[13,"GeneralVerifierSet"],[13,"Warning"],[13,"Shield"],[13,"ErrorData"],[13,"RecoveredSeed"],[13,"AuthorCard"],[13,"AuthorPlainCard"],[13,"AuthorPublicKeyCard"],[13,"BalanceCard"],[13,"BitVecCard"],[13,"BlockHashCard"],[13,"CallCard"],[13,"DefaultCard"],[13,"DerivationsCard"],[13,"EnumVariantNameCard"],[13,"EraMortalCard"],[13,"ErrorCard"],[13,"FieldNameCard"],[13,"FieldNumberCard"],[13,"IdCard"],[13,"IdentityFieldCard"],[13,"MetaCard"],[13,"NameVersionCard"],[13,"NetworkGenesisHashCard"],[13,"NetworkNameCard"],[13,"NetworkInfoCard"],[13,"NewSpecsCard"],[13,"NonceCard"],[13,"PalletCard"],[13,"TextCard"],[13,"TipCard"],[13,"TipPlainCard"],[13,"TxSpecCard"],[13,"TxSpecPlainCard"],[13,"TypesInfoCard"],[13,"VarNameCard"],[13,"VerifierCard"],[13,"WarningCard"],[13,"BBananaSplitRecoveryResult"],[13,"DynamicDerivations"],[13,"Other"],[13,"Selected"],[13,"AddSpecs"],[13,"LoadMetadata"],[13,"LoadTypes"],[13,"SufficientCryptoReady"],[13,"Backup"],[13,"SeedMenu"],[13,"NewSeedBackup"],[13,"NetworkSelector"],[13,"PasswordConfirm"],[13,"SignatureReady"],[13,"EnterPassword"],[13,"LogRight"],[13,"TypesInfo"],[13,"ManageMetadata"],[13,"SelectSeed"],[13,"Regular"],[13,"Sensitive"],[13,"Keys"],[13,"Settings"],[13,"Log"],[13,"LogDetails"],[13,"Transaction"],[13,"SeedSelector"],[13,"KeyDetails"],[13,"NewSeed"],[13,"RecoverSeedName"],[13,"RecoverSeedPhrase"],[13,"DeriveKey"],[13,"VVerifier"],[13,"ManageNetworks"],[13,"NNetworkDetails"],[13,"SignSufficientCrypto"],[13,"SelectSeedForBackup"],[13,"KeyDetailsMulti"],[13,"Svg"],[13,"Png"],[13,"LoadMeta"],[13,"AddSpecs"],[13,"Sign"],[13,"Derivations"],[13,"Read"],[13,"Stub"],[13,"Custom"],[13,"Standard"]]},\
"generate_message":{"doc":"This crate is intended to support the Vault from the active","t":"NNNNNNNNNENNNNNNNNNNNGNNNNNNNNNNNNNNNNNNNNLLLLLLLLALLLLLLLLLLLLFALALLLLLALLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDLLLLLLMLLLLLLLLLLFFFLLLLLLMMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLNDDDNNDELLLLLLFFFLLLLLLLLLLMMLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLFFFMMFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMFFMMFFFLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLNNNELLLLLFLLLLLLLFLLLLLLLLLLLLLMMNNNNNNNNDEEDENDNNEDDNNNNNDNNNNNENNNDNNENNEDENNDNNNDNNNNDNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["AddressBookEmpty","AddressBookEntryWithName","AddressBookSpecsName","BadSignature","BlockHashLength","Codec","Database","Definitions","EarlierVersion","Error","FaultySpecs","HotDatabaseMetadataOverTwoEntries","HotDatabaseMetadataSameVersionTwice","Io","JsonRPC","Metadata","NetworkSpecs","NotFound","NotSupported","PublicKeyWrongLength","Qr","Result","SameVersionDifferentMetadata","SignatureWrongLength","Sled","Specs","SpecsInDb","TwoBase58ForName","TwoGenesisHashVariantsForName","TwoNamesForUrl","TwoUrlVariantsForName","UKeyHashInDb","UKeyUrlInDb","UnexpectedBlockHashFormat","UnexpectedFetchedBlockHashFormat","UnexpectedFetchedGenesisHashFormat","UnexpectedGenesisHashFormat","UnexpectedMetadataFormat","UnexpectedPubKeyLength","UnexpectedSignatureLength","UnexpectedSystemPropertiesFormat","ValuesChanged","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fetch_metadata","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_ref","full_run","helpers","init","interpret_specs","into","into_any","into_any_rc","into_color","into_color_unclamped","parser","provide","source","to_string","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","address_book_entry","address_book_name","block_hash_in_db","block_hash_in_fetch","encryption","error","name","name","name","name","name","name","name","name","name","new_version","old_version","specs_name","title","url","url","url","url","url","value","value","version","version","what","FetchedInfo","FetchedInfoWithNetworkSpecs","adapt_into_using","adapt_into_using","as_any","as_any","as_any_mut","as_any_mut","block_hash","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fetch_info","fetch_info_with_network_specs","fetch_meta_at_block","from","from","from_mut","from_mut","from_ref","from_ref","genesis_hash","genesis_hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","meta","meta","properties","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","All","MetaFetched","MetaShortCut","MetaValuesStamped","None","OnlyNew","SortedMetaValues","Write","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add_new_metadata","add_specs_print","address_book_content","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","at_block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cut","db_upd_metadata","db_upd_network","debug_meta_at_block","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","error_occured","filter_address_book_by_url","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","generate_bulk_transaction_qr","generate_key_info_export_to_qr","generate_qr_code","genesis_hash","genesis_hash","genesis_hash_in_hot_db","get_address_book_entry","get_network_specs_to_send","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_specname_in_db","load_metadata_print","meta_fetch","meta_history_content","meta_values","meta_values","meta_values","network_specs_from_entry","network_specs_from_title","newer","older","prepare_metadata","read_metadata_database","specs_agnostic","stamped","to_owned","try_from","try_from","try_from","try_from","try_from","try_get_network_specs_to_send","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_known_specs","update_modify_encryption_specs","vzip","vzip","vzip","vzip","vzip","Array","None","Single","TokenFetch","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","check_specs","deref","deref_mut","drop","from","from_mut","from_ref","init","interpret_properties","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","decimals","unit","AddSpecs","Address","Alice","All","BlockHistory","Both","BulkTransactionTestPayload","CheckFile","Cli","Command","Content","ContentArgs","Crypto","D","Derivations","EncodeToQr","F","Goal","InstructionMeta","InstructionSpecs","K","KeyInfoExportToQr","Load","LoadMetadata","LoadTypes","Make","Make","MakeColdRelease","MetaAtBlock","MetaDefaultFile","Metadata","Msg","Name","Networks","None","Override","P","Qr","Remove","Remove","RestoreDefaults","Set","SetFlags","Show","Show","Sign","Signature","SpecNameVersion","Specs","Specs","Sufficient","Sufficient","T","Text","Title","Token","TransferMetaToColdRelease","Types","Unwasm","Verifier","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","address","all","all_empty","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command","command_for_update","content","content","crypto","crypto","d","db","db","db","decimals","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derivations","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encryption","export_dir","f","files_dir","files_dir","files_dir","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","goal","goal","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","has_subcommand","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","k","msg","name","name","over","p","pass_errors","payload","payload","set","set","signature","signature_file","signature_hex","sufficient","sufficient_file","sufficient_hex","t","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","to_possible_value","to_possible_value","to_string","to_string","token","token_decimals","token_unit","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unit","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","value_variants","value_variants","verifier","verifier_alice","verifier_file","verifier_hex","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","block_hash","chunk_size","chunk_size","chunk_size","cold_db","db_path","db_path","db_path","db_path","db_path","db_path","dst_file","dst_file","dst_file","export_dir","export_dir","filename","files_dir","files_dir","fps","from","hex","hot_db","keys_num","name","output_format","path","path","r","s","s","tx_count","update_db","url","version","pass_errors","s","s","e","s","name","t","version","s","s"],"q":[[0,"generate_message"],[83,"generate_message::Error"],[112,"generate_message::fetch_metadata"],[173,"generate_message::helpers"],[347,"generate_message::interpret_specs"],[378,"generate_message::interpret_specs::TokenFetch"],[380,"generate_message::parser"],[1174,"generate_message::parser::Command"],[1209,"generate_message::parser::Content"],[1212,"generate_message::parser::Crypto"],[1214,"generate_message::parser::Remove"],[1217,"generate_message::parser::Show"]],"d":["<code>ADDRESS_BOOK</code> tree of the hot database has no entries to …","<code>AddressBookEntry</code> searched in <code>ADDRESS_BOOK</code> tree of the hot …","<code>AddressBookEntry</code> in hot database contains <code>encryption</code> and …","Provided data signature (entered separately or as a part of","User-entered block hash has invalid length","","","","Fetched network metadata version is lower than the one …","Generate Message error.","Fetched network specs are not suitable for use in Vault.","<code>METATREE</code> of the hot database should contain at most two …","<code>METATREE</code> of the hot database has two entries for a network …","","","","","","","","","Generate Message result.","Fetched network metadata is different from the one already …","","","","Network specs are already in the database","<code>SPECSTREEPREP</code> tree of the hot database contains …","<code>ADDRESS_BOOK</code> tree of the hot database contains …","<code>ADDRESS_BOOK</code> tree of the hot database contains …","<code>ADDRESS_BOOK</code> tree of the hot database contains …","Tried to fetch with <code>-u</code> key using address not known to the …","Tried to fetch with <code>-u</code> key using address already known to …","","Fetched block hash could not be transformed in expected …","Fetched genesis hash could not be transformed in expected …","","","","","","Fetched data is different from the one already in the hot …","","","","","","","","","Fetch network information from a node using RPC calls","","","","","","Returns the argument unchanged.","","","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Process incoming command as interpreted by parser.","Helpers","","Fit network properties fetched via RPC call into data in …","Calls <code>U::from(self)</code>.","","","","","Command line parser for the client","","","","","","","","","","","address book entry with exactly matching genesis hash","name in <code>AddressBookEntry</code>","optionally recorded block hash for which the metadata was …","block hash for which the metadata is fetched now","network supported encryption","what exactly is wrong with the network specs","network name","network name","network name","network name","network name","network name","network name","network name","","network version just fetched","network version in hot database, higher than the one just …","name in <code>NetworkSpecs</code>","network address book title","URL address","URL address used for fetch","URL address, for which two condlicting names were found","URL address used for RPC call","URL address used for RPC cal","genesis hash value as received through RPC call","block hash value as received through RPC call","network version","network version","what exactly has changed","Data from RPC calls for <code>load_metadata</code> update payload.","Data from RPC calls for <code>add_specs</code> update payload.","","","","","","","Block hash, at which the metadata was fetched, as a …","","","","","","","","","","","Fetch data for <code>load_metadata</code> update payload through RPC …","Fetch data for <code>add_specs</code> update payload through RPC calls.","Fetch network metadata from given URL address at given …","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Fetched genesis hash, as a hexadecimal string","Fetched genesis hash, as a hexadecimal string","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Fetched metadata, as a hexadecimal string","Fetched metadata, as a hexadecimal string","Fetched network properties, as a <code>Map</code>","","","","","","","","","","","","","","","all payloads, <code>-t</code> key or no setting key was used","Fetched and interpreted data for <code>load_metadata</code> payload and …","Data needed to output <code>load_metadata</code> update payload file.","<code>MetaValues</code> with corresponding block hash at the time of …","no payloads, <code>-p</code> setting key was used","only new payloads, <code>-k</code> setting key was used","<code>MetaValuesStamped</code> sorted into sets of newer and older, by …","Content to print during <code>load-metadata&lt;-k/-p/-t&gt;</code> processing.","","","","","","","Try updating <code>SortedMetaValues</code> with new <code>MetaValuesStamped</code>.","Write to file <code>add_specs</code> update payload as raw bytes.","Get all <code>ADDRESS_BOOK</code> entries with address book titles.","","","","","","","","","","","","","","","","","","","","","","","","","","Update the database after <code>load-metadata</code> run.","Update the database after <code>add-specs</code> run.","Get network metadata file from given URL address at …","","","","","","","","","","","","","","","","Process error depending on pass errors flag <code>-s</code>.","Get all <code>ADDRESS_BOOK</code> entries with address book titles, for …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Generate Bulk Transaction Signing payload for testing","","Generate with data into a specified file.","","","Search for any <code>ADDRESS_BOOK</code> entry with given genesis hash.","Get <code>AddressBookEntry</code> from the database for given address …","Get network specs <code>NetworkSpecs</code> from the hot database.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Check if <code>ADDRESS_BOOK</code> has entries with given <code>name</code> and …","Write to file <code>load_metadata</code> update payload as raw bytes.","Get network information through RPC calls at <code>address</code> and …","Get all entries from <code>META_HISTORY</code>.","","","","Get <code>NetworkSpecs</code> corresponding to the given …","Get <code>NetworkSpecs</code> from the database for given address book …","Set of the metadata entries with latest version known to …","Other metadata entries. Since there are maximum two …","Collect and sort <code>MetaValuesStamped</code> from the hot database","Collect all <code>MetaValuesStamped</code> from the hot database.","Fetch data and assemble <code>NetworkSpecs</code> with only URL address …","","","","","","","","Try to get network specs <code>NetworkSpecs</code> from the hot …","","","","","","","","","","","","","","","","","","","","","","","","","","Update <code>NetworkSpecs</code> already existing in the database with …","Modify <code>NetworkSpecs</code> existing in the database <strong>only</strong> with …","","","","","","Equal size arrays for decimals and units.","No decimals and no unit.","Single decimals parameter and single unit.","Accepted token from <code>system_properties</code> RPC call","","","","","","Get from <code>system_properties</code> RPC call results the network …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Transform <code>system_properties</code> RPC call results into …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","<code>add-specs</code> payload","Process only the network referred to by URL address","Alice key","Deal with all relevant database entries","Show all entries from <code>META_HISTORY</code> tree","Both QR code and text file, default","Produce a bulk tx signing QR","Check that external file is valid network metadata and …","Polkadot Vault data manipulation tool.","","Reference key for <code>load-metadata</code> and <code>add-specs</code> commands.","","Verifier-to-be, for <code>make</code> and <code>sign</code> commands.","Key <code>-d</code>: do <strong>not</strong> update the database, make RPC calls, and …","Data to process <code>derivations</code> command.","Encode payload to multiframe QR","Key <code>-f</code>: do <strong>not</strong> run RPC calls, produce output files from …","Target output format for <code>derivations</code>, <code>make</code> and <code>sign</code> …","Command details for <code>load-metadata</code>.","Command details for <code>add-specs</code>.","Key <code>-k</code>: update database through RPC calls, produce output …","Produce a test key info export QR","Prepare payload for load-metadata update","<code>load-metadata</code> payload","<code>load-types</code> payload","Data to process <code>make</code> and <code>sign</code> commands.","Complete update generation according","Generate release cold database at optionally provided path","Create file with network metadata at block hash","Make file with hexadecimal metadata for defaults release …","Show all hot database entries","Payload for <code>make</code> and <code>sign</code> commands.","Process only a specified network","Show all hot database entries","No verifier, to make unsigned updates.","Overrides for <code>add-specs</code> command.","Key <code>-p</code>: update database through RPC calls, do <strong>not</strong> produce …","Only QR code","Data to process <code>remove</code> command.","Remove all data associated with a network","Restore hot database to default state","Setting key for <code>load-metadata</code> and <code>add-specs</code> commands.","","Display data commands.","Display content of the a given tree of the hot database","Sign","","Remove specified network metadata entry.","Prepare payload for add-specs update","Show network specs from entry.","","Real verifier, <code>SufficientCrypto</code> is either assembled from …","Key <code>-t</code> (no setting key defaults here): update database …","Only text file with hexadecimal string (used for tests)","Removing all network data by network address book title.","Data from command line for token override.","Transfer metadata from hot database to release cold …","Prepare payload for load-types update","Prepare payload for <code>load_metadata</code> update from <code>.wasm</code> file","Verifier-to-be, for <code>make</code> and <code>sign</code> commands.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Process only the network referred to by URL address","Deal with all relevant database entries","Flag to indicate that no overrides were invoked.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reference key, as read from command line","","","who is signing the payload","do not update the database, make RPC calls, and produce …","Path to the hot database","Path to the hot database","Path to the hot database","Decimals of the token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contents of the payload file","","","","","","","","","","","","","","","","","","","","","<code>Encryption</code> override to specify encryption algorithm used …","Folder to save completed update messages","do not run RPC calls, produce output files from database …","Folder to save payloads ready for signing","Folder to save payloads ready for signing","Folder to save payloads ready for signing","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","target output format","Target output format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","update database through RPC calls, produce output files …","payload","Process only a specified network","output name override","Overrides, relevant only for <code>add-specs</code> command","update database through RPC calls, do <strong>not</strong> produce any …","Skip errors","","","Setting key, as read from command line","","","Read signature from a file","Supply signature in hex format as command line argument","","Read signature from a file","Supply signature in hex format as command line argument","(no setting key defaults here): update database through RPC","Address book title for network in which addresses with …","Network title override, so that user can specify the …","","","","","","","","","","","","","","","","","","Token override to specify decimals used to display balance …","Token override to specify units used to display balance in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Units of the token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use Alice key with a specified encryption scheme","Read Verifier from a file","Specify Verifier as a hex string argument","","","","","","","","","","","","","","","","","","","","","Hash of the block at which meta is asked","Size of a chunk in a multiframe RaptorQ encoding.","Size of a chunk in a multiframe RaptorQ encoding.","Size of a chunk in a multiframe RaptorQ encoding","Path to release db","Path to the hot database","Path to the hot database","Path to hot db","Hot database path","Hot database path","Path to hot db","","","Destination file to write qr code to","Folder to save completed update messages","Folder to save completed update messages","WASM file","Folder to save payloads ready for signing","Folder to save payloads ready for signing","FPS of a multiframe RaptorQ encoding","AccountId of transaction in hex form.","Hex-encoded payload to encode","Path to hot db","Number of keys to generate and export","File name","Qr or File","Path to release db","Path to a file to encode","","","","Number of transactions in a bulk.","update the DB.","URL of the chain RPC point","Version","Skip errors","network name or network address book title","Network address","Encryption scheme to use","","","","","Address book title","Path to metadata file"],"i":[4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,4,0,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,76,77,78,78,79,80,79,81,82,83,84,85,86,78,87,86,86,77,88,88,76,89,90,80,91,92,85,78,90,0,0,27,28,27,28,27,28,27,27,28,27,28,27,28,27,28,27,28,0,0,0,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,93,0,0,0,93,93,0,0,32,93,33,41,40,32,0,0,0,93,33,41,40,32,93,33,41,40,32,32,40,93,33,41,40,32,93,33,41,40,32,32,32,40,0,0,0,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,0,0,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,0,0,0,41,40,0,0,0,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,0,0,0,0,41,40,32,0,0,33,33,0,0,0,40,32,93,33,41,40,32,0,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,93,33,41,40,32,0,0,93,33,41,40,32,94,94,94,0,94,94,94,94,94,0,94,94,94,94,94,94,94,0,94,94,94,94,94,94,94,94,94,94,94,94,94,95,95,63,71,67,71,56,43,14,56,0,0,0,0,0,58,0,14,58,0,0,0,58,14,14,63,63,0,14,14,14,14,56,0,71,56,67,0,58,43,0,14,14,0,0,0,14,14,0,64,14,56,0,67,58,43,64,0,14,14,14,0,56,57,58,59,43,60,61,62,63,64,65,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,57,57,54,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,68,69,70,57,59,66,60,61,62,65,54,68,69,70,57,59,66,60,61,62,65,54,14,56,71,64,14,56,71,64,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,56,57,58,59,43,60,61,62,63,64,65,56,57,58,59,43,60,61,62,63,64,65,68,68,68,69,70,66,66,59,69,70,65,50,57,59,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,65,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,54,66,59,69,70,66,68,14,56,69,70,57,71,58,58,59,66,43,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,71,58,58,59,66,43,60,61,62,63,64,65,54,50,68,14,56,69,70,57,71,59,66,60,61,62,64,65,54,68,14,56,69,70,57,71,59,66,60,61,62,64,65,54,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,66,65,68,69,70,57,59,66,60,61,62,65,54,14,56,71,64,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,59,66,57,66,70,59,57,66,66,69,70,66,61,61,66,62,62,59,65,54,56,57,58,59,43,60,61,62,63,64,65,58,43,63,58,43,54,54,54,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,50,68,14,56,69,70,57,71,59,66,60,61,62,64,65,54,68,14,56,69,70,57,71,59,66,60,61,62,64,65,54,58,43,63,66,60,60,60,67,68,14,56,69,70,57,71,58,59,66,43,60,61,62,63,64,65,54,50,96,97,98,99,100,101,102,103,104,105,106,97,98,99,105,96,104,104,106,97,98,99,100,97,105,98,107,99,102,101,108,98,104,96,105,109,110,111,112,113,114,115,114,116,117],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[3],[3],[3],0,[[4,5],6],[[4,5],6],[7,4],[8,4],[9,4],[[]],[10,4],[11,4],[12,4],[13,4],[[]],[[]],[14,15],0,[[],3],0,[[]],[[[17,[16]]],[[17,[2,16]]]],[18,[[18,[2]]]],[[]],[[]],0,[19],[4,[[21,[20]]]],[[],22],[[],23],[[],23],[[],[[23,[24]]]],[[],25],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[3],[3],[3],[3],[3],[3],[26,[[15,[27]]]],[26,[[15,[28]]]],[[26,29],[[15,[22]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],3],[[],3],[[]],[[]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[[]],[[]],[[]],[[]],0,0,0,[[],23],[[],23],[[],23],[[],23],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[31],[1],[1],[1],[1],[1],[[32,33],[[15,[34]]]],[[35,[37,[36]]],15],[38,[[15,[39]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[[]],[40,41],[[38,33],15],[[38,26,35],15],[[26,26,[37,[36]]],15],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[4,34],15],[[38,26],[[15,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[36]],3,42,22,43],15],[[[37,[36]],42,42,3],15],[[[45,[44]],42,42,[37,[36]]],15],0,0,[[38,29],[[15,[[21,[46]]]]]],[[38,26],[[15,[46]]]],[[38,47],[[15,[35]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[38,26,26],[[15,[34]]]],[[41,[37,[36]]],15],[26,[[15,[40]]]],[38,[[15,[[39,[48]]]]]],0,0,0,[[38,46],[[15,[35]]]],[[38,26],[[15,[35]]]],0,0,[38,[[15,[33]]]],[38,[[15,[[39,[32]]]]]],[[26,49,[21,[50]],[21,[22]]],[[15,[35]]]],[40,32],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[38,47],[[15,[[21,[35]]]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,35,[21,[22]],[21,[50]]],[[15,[34]]]],[[26,35,49,[21,[22]],[21,[50]]],15],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[[[52,[22,51]],[21,[42]]],15],[3],[3],[3],[[]],[[]],[[]],[[],3],[[[52,[22,51]],[21,[42]],[21,[50]]],[[15,[53]]]],[[]],[[[17,[16]]],[[17,[2,16]]]],[30,[[30,[2]]]],[18,[[18,[2]]]],[[]],[[]],[[],23],[[],23],[[],[[23,[24]]]],[[],25],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31],[31],[31],[31],[31],[31],[31],[31],[31],[31],[31],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[54,34],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[55,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[57,57],[58,58],[59,59],[43,43],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],0,[[],55],0,0,[66,[[15,[67]]]],0,0,0,0,0,0,[[],57],[[],59],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,0,0,0,0,0,[[68,5],6],[[14,5],6],[[56,5],6],[[69,5],6],[[70,5],6],[[57,5],6],[[71,5],6],[[58,5],6],[[58,5],6],[[59,5],6],[[66,5],6],[[43,5],6],[[43,5],6],[[60,5],6],[[61,5],6],[[62,5],6],[[63,5],6],[[64,5],6],[[65,5],6],[[54,5],6],[[50,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,71],[[]],[59,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,[[23,[68,73]]]],[72,[[23,[14,73]]]],[72,[[23,[56,73]]]],[72,[[23,[69,73]]]],[72,[[23,[70,73]]]],[72,[[23,[57,73]]]],[72,[[23,[71,73]]]],[72,[[23,[59,73]]]],[72,[[23,[66,73]]]],[72,[[23,[60,73]]]],[72,[[23,[61,73]]]],[72,[[23,[62,73]]]],[72,[[23,[64,73]]]],[72,[[23,[65,73]]]],[72,[[23,[54,73]]]],[72,[[23,[68,73]]]],[72,[[23,[14,73]]]],[72,[[23,[56,73]]]],[72,[[23,[69,73]]]],[72,[[23,[70,73]]]],[72,[[23,[57,73]]]],[72,[[23,[71,73]]]],[72,[[23,[59,73]]]],[72,[[23,[66,73]]]],[72,[[23,[60,73]]]],[72,[[23,[61,73]]]],[72,[[23,[62,73]]]],[72,[[23,[64,73]]]],[72,[[23,[65,73]]]],[72,[[23,[54,73]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[21,[74]]]],[[],[[21,[74]]]],[[],[[21,[74]]]],[[],[[21,[74]]]],[[],[[21,[74]]]],[[],[[21,[74]]]],[[],[[21,[74]]]],[[],[[21,[74]]]],[[],[[21,[74]]]],[[],[[21,[74]]]],[[],[[21,[74]]]],[26,34],[26,34],[26,34],[26,34],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[66,[[15,[[39,[44]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,[[21,[75]]]],[43,[[21,[75]]]],[63,[[21,[75]]]],[[],22],[[],22],[54,[[21,[50]]]],0,0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],[[23,[24]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[68,72],[[23,[73]]]],[[14,72],[[23,[73]]]],[[56,72],[[23,[73]]]],[[69,72],[[23,[73]]]],[[70,72],[[23,[73]]]],[[57,72],[[23,[73]]]],[[71,72],[[23,[73]]]],[[59,72],[[23,[73]]]],[[66,72],[[23,[73]]]],[[60,72],[[23,[73]]]],[[61,72],[[23,[73]]]],[[62,72],[[23,[73]]]],[[64,72],[[23,[73]]]],[[65,72],[[23,[73]]]],[[54,72],[[23,[73]]]],[[68,72],[[23,[73]]]],[[14,72],[[23,[73]]]],[[56,72],[[23,[73]]]],[[69,72],[[23,[73]]]],[[70,72],[[23,[73]]]],[[57,72],[[23,[73]]]],[[71,72],[[23,[73]]]],[[59,72],[[23,[73]]]],[[66,72],[[23,[73]]]],[[60,72],[[23,[73]]]],[[61,72],[[23,[73]]]],[[62,72],[[23,[73]]]],[[64,72],[[23,[73]]]],[[65,72],[[23,[73]]]],[[54,72],[[23,[73]]]],[[],[[45,[58]]]],[[],[[45,[43]]]],[[],[[45,[63]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[8,"TransformMatrix"],[8,"Any"],[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"MetadataError"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"Error"],[4,"Error"],[4,"Command"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Rc"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"OutOfBounds"],[3,"TypeId"],[15,"str"],[3,"FetchedInfo"],[3,"FetchedInfoWithNetworkSpecs"],[3,"H256"],[3,"Arc"],[3,"Private"],[3,"MetaValuesStamped"],[3,"SortedMetaValues"],[15,"bool"],[3,"NetworkSpecs"],[3,"Path"],[8,"AsRef"],[3,"Db"],[3,"Vec"],[3,"MetaFetched"],[3,"MetaShortCut"],[15,"u16"],[4,"Goal"],[15,"u8"],[15,"slice"],[3,"AddressBookEntry"],[3,"NetworkSpecsKey"],[3,"MetaHistoryEntry"],[4,"Encryption"],[3,"Token"],[4,"Value"],[3,"Map"],[3,"NetworkProperties"],[3,"Override"],[3,"Command"],[4,"Show"],[3,"ContentArgs"],[4,"Set"],[3,"SetFlags"],[3,"Verifier"],[3,"Signature"],[3,"Sufficient"],[4,"Msg"],[4,"Remove"],[3,"Derivations"],[3,"Make"],[4,"Crypto"],[3,"Cli"],[3,"InstructionMeta"],[3,"InstructionSpecs"],[4,"Content"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"PossibleValue"],[13,"UKeyHashInDb"],[13,"AddressBookSpecsName"],[13,"SameVersionDifferentMetadata"],[13,"SpecsInDb"],[13,"FaultySpecs"],[13,"TwoGenesisHashVariantsForName"],[13,"TwoUrlVariantsForName"],[13,"TwoBase58ForName"],[13,"HotDatabaseMetadataOverTwoEntries"],[13,"HotDatabaseMetadataSameVersionTwice"],[13,"EarlierVersion"],[13,"AddressBookEntryWithName"],[13,"UKeyUrlInDb"],[13,"TwoNamesForUrl"],[13,"ValuesChanged"],[13,"UnexpectedFetchedGenesisHashFormat"],[13,"UnexpectedFetchedBlockHashFormat"],[4,"Write"],[4,"TokenFetch"],[13,"Array"],[13,"MetaAtBlock"],[13,"KeyInfoExportToQr"],[13,"BulkTransactionTestPayload"],[13,"EncodeToQr"],[13,"TransferMetaToColdRelease"],[13,"Show"],[13,"Remove"],[13,"RestoreDefaults"],[13,"Unwasm"],[13,"MetaDefaultFile"],[13,"Types"],[13,"MakeColdRelease"],[13,"Specs"],[13,"All"],[13,"Name"],[13,"Address"],[13,"Alice"],[13,"Sufficient"],[13,"SpecNameVersion"],[13,"Title"],[13,"Specs"],[13,"CheckFile"]]},\
"navigator":{"doc":"This is experimental cross-platform navigation for Vault. …","t":"ENNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNGNDNNNNNNNNNNNNNNNNNLLLALLLLLLLLLLLLLLLLLLLFLLLLLFFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLFALALLLLLLLLLLLLLLLLLLLLFLLLENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDNDNDNNNDNNNNNNNNNNDNENNNNEDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Action","BackupSeed","CheckPassword","ClearLog","CreateLogComment","DataPacking","DbHandling","DbNotInitialized","Definitions","Error","GoBack","GoForward","Hex","Increment","KeyNotFound","ManageMetadata","ManageNetworks","MutexPoisoned","NavbarKeys","NavbarLog","NavbarScan","NavbarSettings","NetworkSelector","NewKey","NewSeed","Nothing","PushWord","RecoverSeed","RemoveKey","RemoveMetadata","RemoveNetwork","RemoveSeed","RemoveTypes","Result","RightButtonAction","STATE","SeedsNumMismatch","SelectKey","SelectSeed","Shield","ShowDocuments","ShowLogDetails","SignMetadata","SignNetworkSpecs","SignTypes","Start","TextEntry","TransactionActionUnsupported","TransactionFetched","TransactionParsing","TransactionSigning","TxActionNotSign","ViewGeneralVerifier","adapt_into_using","adapt_into_using","adapt_into_using","alerts","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","do_action","drop","drop","drop","eq","equivalent","export_key_info","export_signatures_bulk","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","init","init","init","init_navigation","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","keys_by_seed_name","modals","provide","screens","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_seed_names","vzip","vzip","vzip","Alert","Empty","Error","ErrorDisplay","Shield","__clone_box","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","from","from_mut","from_ref","get_name","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","to_owned","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","Backup","Empty","EnterPassword","KeyDetailsAction","LogComment","LogRight","ManageMetadata","Modal","NetworkDetailsMenu","NetworkSelector","NewSeedBackup","NewSeedMenu","PasswordConfirm","SeedMenu","SelectSeed","SignatureReady","SufficientCryptoReady","TypesInfo","__clone_box","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","from","from_mut","from_ref","get_name","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","to_owned","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","AddressState","AddressStateMulti","DeriveKey","DeriveState","Documents","EnteredInfo","KeyDetails","KeyDetailsMulti","Keys","KeysState","Log","LogDetails","ManageNetworks","MultiSelect","NetworkDetails","NewSeed","None","Nowhere","RecoverSeedName","RecoverSeedPhrase","RecoverSeedPhraseState","Scan","Screen","SeedSelector","SelectSeedForBackup","Settings","SignSufficientCrypto","SpecialtyKeysState","SufficientCryptoState","Swiped","Transaction","Verifier","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blank_keys_state","blank_keys_state","blank_keys_state","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_network","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collided_with","collision","content","counter","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deselect_specialty","draft","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_default_label","get_multiselect_keys","get_name","get_specialty","get_swiped_key","has_back","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_multiselect","is_root","is_root","key_selected","multisigner","multisigner","name","network_specs_key","network_specs_key","network_specs_key","network_specs_key","new","new","new","new","new","new_in_network","next","number","ok","out_of","path","plus_one","previous","push_word","seed","seed_name","seed_name","seed_name","seed_name","select_set","select_single","set","swipe","text_entry","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroize"],"q":[[0,"navigator"],[151,"navigator::alerts"],[189,"navigator::modals"],[240,"navigator::screens"]],"d":["All actions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Navigation state of the app","","","","","","","","","","","","","","","","","","","","","List of all alerts","","","","","","","","","","","","","","","","","","","","User actions handler.","","","","","","Export key info with derivations.","Export signatures bulk.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Should be called in the beginning to recall things stored …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Get keys by seed name","List of all modals","","List of all screens","","","","","","","","","","","","","","","","","","","","","Should be called when seed names are modified in native to …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","State of screen with 1 key","State of screen with multiple keys","","State of derive key screen","","<code>EnteredInfo</code>, <code>path+pwd</code> entered by the user, zeroizeable","","","","State of keys screen","","","","","","","","","","","State of screen recover seed phrase","","All screens","","","","","","State of screen generating sufficient crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Encode screen name into string for UI","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>None</code>, this is a root key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,7,7,7,7,19,19,19,19,0,7,7,19,7,19,7,7,19,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,0,19,7,7,7,7,7,7,7,7,7,7,19,7,19,19,19,7,19,7,4,0,19,7,4,19,7,4,19,7,4,19,7,4,19,7,4,4,19,7,4,0,19,7,4,7,7,0,0,19,19,7,19,19,19,19,19,19,7,4,19,7,4,19,7,4,19,7,4,0,19,7,4,19,7,4,19,7,4,19,7,4,19,7,4,19,7,4,0,0,19,0,19,19,19,7,4,19,7,4,19,7,4,19,7,4,19,7,4,19,7,4,0,19,7,4,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,46,0,46,0,46,46,46,0,46,46,46,47,46,46,47,46,46,46,0,46,0,46,46,46,46,0,0,47,46,46,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,41,43,44,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,42,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,44,44,48,48,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,42,49,46,47,42,41,43,44,48,49,50,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,42,46,42,42,46,46,47,42,41,43,44,48,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,42,41,43,48,41,43,49,42,41,43,44,42,41,43,44,49,42,43,43,48,43,44,48,43,49,48,42,41,43,44,42,42,43,42,49,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,46,47,42,41,43,44,48,49,50,44,48,46,47,42,41,43,44,48,49,50,50],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[3],[3],[4,[[6,[[5,[0]]]]]],[3],[3],[3],[3],[[7,8,8],[[10,[9]]]],[3],[3],[3],[[7,7],11],[[],11],[[12,[15,[13,14]]],[[10,[16]]]],[17,[[10,[18]]]],[[19,20],21],[[19,20],21],[[7,20],21],[22,19],[23,19],[24,19],[25,19],[[]],[26,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[12,[27,[13]]],10],[[]],[[]],[[]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,8],[[10,[32]]]],0,[33],0,[19,[[5,[34]]]],[[],13],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[13]]],10],[[]],[[]],[[]],0,0,0,0,0,[38],[1],[[],2],[[],2],[[]],[[]],[39,39],[[]],[3],[3],[3],[[39,39],11],[[],11],[[39,20],21],[[]],[[]],[[]],[39,13],[[],3],[[]],[[[29,[28]]],[[29,[2,28]]]],[30,[[30,[2]]]],[31,[[31,[2]]]],[[]],[[]],[[]],[[],35],[[],35],[[],[[35,[36]]]],[[],37],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[38],[1],[[],2],[[],2],[[]],[[]],[40,40],[[]],[3],[3],[3],[[40,40],11],[[],11],[[40,20],21],[[]],[[]],[[]],[40,13],[[],3],[[]],[[[29,[28]]],[[29,[2,28]]]],[30,[[30,[2]]]],[31,[[31,[2]]]],[[]],[[]],[[]],[[],35],[[],35],[[],[[35,[36]]]],[[],37],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[38],[38],[38],[38],[38],[38],[38],[38],[38],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[41,42],[43,42],[44,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[42,45],42],[46,46],[47,47],[42,42],[41,41],[43,43],[44,44],[48,48],[49,49],[50,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,51,52],44],[44,5],[48,53],[48,54],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[42,42],[49,55],[3],[3],[3],[3],[3],[3],[3],[3],[3],[50],[[46,20],21],[[47,20],21],[[42,20],21],[[41,20],21],[[43,20],21],[[44,20],21],[[48,20],21],[[49,20],21],[[50,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,13],[42,[[27,[51]]]],[46,[[5,[13]]]],[42,47],[42,[[5,[51]]]],[46,11],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[53,48],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[[[29,[28]]],[[29,[2,28]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[30,[[30,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[31,[[31,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,11],[41,11],[43,11],[48,5],[41,51],[43,51],[49,13],[42,[[5,[45]]]],[41,[[5,[45]]]],[43,45],[44,[[5,[45]]]],[[12,8],[[10,[42]]]],[[12,8,42],[[10,[41]]]],[[12,13,45,[17,[51]]],[[10,[43]]]],[[8,42,5],44],[8,49],[[8,45],42],[43,43],[43,3],[48,11],[43,3],[44,13],[48,48],[43,43],[[49,8]],[48,13],[42,13],[41,13],[43,13],[44,13],[[42,[27,[51]]],42],[[42,51],42],[43,27],[[42,51],42],[[49,8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],[[35,[36]]]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,8],44],[[48,51,52,8],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50]],"c":[],"p":[[8,"TransformMatrix"],[8,"Any"],[15,"usize"],[3,"STATE"],[4,"Option"],[3,"Mutex"],[4,"Action"],[15,"str"],[3,"ActionResult"],[6,"Result"],[15,"bool"],[3,"Db"],[3,"String"],[4,"ExportedSet"],[3,"HashMap"],[3,"MKeysInfoExport"],[15,"slice"],[3,"MSignatureReady"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"FromHexError"],[4,"Error"],[3,"Vec"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"MKeysNew"],[3,"Demand"],[8,"Error"],[4,"Result"],[3,"OutOfBounds"],[3,"TypeId"],[3,"Private"],[4,"Alert"],[4,"Modal"],[3,"AddressState"],[3,"KeysState"],[3,"AddressStateMulti"],[3,"DeriveState"],[3,"NetworkSpecsKey"],[4,"Screen"],[4,"SpecialtyKeysState"],[3,"SufficientCryptoState"],[3,"RecoverSeedPhraseState"],[3,"EnteredInfo"],[4,"MultiSigner"],[3,"AddressDetails"],[4,"SufficientContent"],[15,"u8"],[3,"SeedDraft"]]},\
"parser":{"doc":"","t":"NNNNENNENNNGNNNLLLLLLLLLLAFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFFFLLLLLLLLLLLLLLLLLMMMMMMMMMNNNNNNNNNNNNNNNNENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMDDLLLLLLLLLLLMLLMLLLLLLLLLLLLFMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Codec","Decoding","DefaultTypes","DefinitionsError","Error","FundamentallyBadV14Metadata","Metadata","MetadataBundle","NetworkNameMismatch","NoTypes","Older","Result","Sci","SeparateMethodExtensions","WrongNetworkVersion","adapt_into_using","adapt_into_using","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cards","cut_method_extensions","decoding_commons","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","method","parse_extensions","parse_method","parse_set","provide","source","to_string","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","as_decoded","in_metadata","name_metadata","name_network_specs","meta_v14","network_version","network_version","older_meta","types","Balance","BitVec","BlockHash","Default","EnumVariantName","Era","FieldName","FieldNumber","Id","Id20","IdentityField","Method","NetworkNameVersion","Nonce","None","Pallet","ParserCard","Text","Tip","TxVersion","Varname","__clone_box","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","show_no_docs","to_owned","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","base58prefix","base58prefix","docs","docs_enum_variant","docs_field_name","docs_field_number","docs_type","docs_type","id","id","method_name","name","name","name","number","number","number","path_type","path_type","units","units","version","CutCompact","OutputCard","__clone_box","adapt_into_using","adapt_into_using","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","card","clone","clone_into","compact_found","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_ref","from_ref","get_compact","indent","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","start_next_unit","to_owned","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","OlderMeta","V12","V13","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"parser"],[80,"parser::Error"],[84,"parser::MetadataBundle"],[89,"parser::cards"],[140,"parser::cards::ParserCard"],[162,"parser::decoding_commons"],[223,"parser::method"]],"d":["","Errors occurring during the decoding procedure.","","","Parse error.","Errors occurring because the metadata <code>RuntimeMetadataV14</code> …","","","","","","Parse result.","","","While parsing transaction with certain version of network …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Function intakes SCALE encoded method part of transaction …","","","","","","","","","","","","","","","","","","","metadata version from transaction extensions, as found …","metadata version actually used for parsing, from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Struct to store results of searching <code>Vec&lt;u8&gt;</code> for encoded …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Function to search <code>&amp;[u8]</code> for shortest compact  by brute …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Enum to transfer around older metadata (<code>V12</code> and <code>V13</code>)","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[7,7,7,7,0,7,7,0,7,7,18,0,18,7,7,18,7,18,7,18,7,18,7,18,7,0,0,0,18,7,18,7,18,7,7,7,18,7,7,7,7,18,7,18,7,18,7,18,7,18,7,18,7,18,7,18,7,18,7,0,0,0,0,7,7,7,18,7,18,7,18,7,18,7,18,7,18,7,18,7,34,34,35,35,36,37,36,37,37,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,38,39,40,41,42,43,42,43,38,39,40,42,41,44,45,43,46,42,43,45,46,44,0,0,22,33,22,33,22,33,22,33,22,33,22,22,22,22,33,33,22,33,22,33,22,33,22,33,22,33,22,0,22,33,22,33,22,33,22,33,22,33,22,33,22,33,22,33,22,33,22,33,22,33,22,33,22,33,22,33,22,33,22,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],0,[[[4,[3]]],5],0,[6],[6],[6],[6],[6],[6],[[7,8],9],[[7,8],9],[[]],[10,7],[11,7],[12,7],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[]],[[]],[[]],[[]],0,[[[17,[3]],18,19,[21,[20]]],[[5,[[17,[22]]]]]],[[[17,[3]],18,19],[[5,[[17,[22]]]]]],[[[4,[3]],18,19,[21,[20]]],5],[23],[7,[[21,[24]]]],[[],25],[[],26],[[],26],[[],26],[[],26],[[],[[26,[27]]]],[[],[[26,[27]]]],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29],[1],[[],2],[[],2],[[]],[[]],[30,30],[[]],[6],[6],[6],[[]],[[]],[[]],[[],6],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[[]],[[]],[[30,31],25],[[]],[[],26],[[],26],[[],[[26,[27]]]],[[],28],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29],[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],0,[22,22],[[]],0,[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],[[5,[[33,[32]]]]]],0,[[],6],[[],6],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[]],[[]],[[]],[[]],0,[[]],[[],26],[[],26],[[],26],[[],26],[[],[[26,[27]]]],[[],[[26,[27]]]],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[[],2],[[],2],[[]],[[]],[6],[6],[6],[[]],[[]],[[]],[[],6],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[[]],[[]],[[],26],[[],26],[[],[[26,[27]]]],[[],28],[[]],[[]],[[]]],"c":[],"p":[[8,"TransformMatrix"],[8,"Any"],[15,"u8"],[15,"slice"],[6,"Result"],[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"MetadataError"],[4,"Error"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Vec"],[4,"MetadataBundle"],[3,"ShortSpecs"],[15,"bool"],[4,"Option"],[3,"OutputCard"],[3,"Demand"],[8,"Error"],[3,"String"],[4,"Result"],[3,"OutOfBounds"],[3,"TypeId"],[3,"Private"],[4,"ParserCard"],[15,"u32"],[8,"HasCompact"],[3,"CutCompact"],[13,"WrongNetworkVersion"],[13,"NetworkNameMismatch"],[13,"Sci"],[13,"Older"],[13,"Id"],[13,"Id20"],[13,"Method"],[13,"EnumVariantName"],[13,"FieldName"],[13,"FieldNumber"],[13,"NetworkNameVersion"],[13,"Balance"],[13,"Tip"],[4,"OlderMeta"]]},\
"printing_balance":{"doc":"","t":"DLLFLLMFLLLM","n":["PrettyOutput","borrow","borrow_mut","convert_balance_pretty","from","into","number","print_pretty_test","try_from","try_into","type_id","units"],"q":[[0,"printing_balance"]],"d":["","","","Input <code>balance</code> has to be a printed number. Likely <code>u128</code> or …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,3,3,0,3,3,3,0,3,3,3,3],"f":[0,[[]],[[]],[[1,2,1],3],[[]],[[]],0,[[4,2,1],5],[[],6],[[],6],[[],7],0],"c":[],"p":[[15,"str"],[15,"u8"],[3,"PrettyOutput"],[15,"u128"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"qr_reader_pc":{"doc":"QR reader crate for PC","t":"DLFLLLLLLLLLLLMLLLLLLLFFLLLLLLL","n":["CameraSettings","adapt_into_using","arg_parser","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_mut","from_ref","index","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","process_qr_image","run_with_camera","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"qr_reader_pc"]],"d":["Structure for storing camera settings.","","The program’s argument parser. The parser initializes …","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Camera index","","Calls <code>U::from(self)</code>.","","","","","","Function for decoding QR grayscale image. Returns a string …","Main cycle of video capture. Returns a string with decoded …","","","","","","",""],"i":[0,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,4,4,4,4,4,4,4],"f":[0,[1],[[[3,[2]]],[[5,[4]]]],[[],6],[[],6],[[]],[[]],[7],[7],[7],[[4,8],9],[[]],[[]],[[]],0,[[],7],[[]],[[[11,[10]]],[[11,[6,10]]]],[12,[[12,[6]]]],[13,[[13,[6]]]],[[]],[[]],[[14,15],[[5,[16]]]],[4,[[5,[2]]]],[[],17],[[],17],[[],[[17,[18]]]],[[],19],[[]],[[]],[[]]],"c":[],"p":[[8,"TransformMatrix"],[3,"String"],[3,"Vec"],[3,"CameraSettings"],[6,"Result"],[8,"Any"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"GrayImage"],[4,"InProgress"],[4,"Ready"],[4,"Result"],[3,"OutOfBounds"],[3,"TypeId"]]},\
"qr_reader_phone":{"doc":"","t":"NNNNNENNNNNNNGNNNNLLLLLFLLLLLLLLLLLFFLLLLLLLALLLLLLLLLLDNNNDDNEDNNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BananaSplitError","BananaSplitWrongPassword","ConflictingLegacyLengths","ConflictingPayloads","DynamicInterruptedByStatic","Error","FountainInterruptedByLegacy","HexDecoding","LegacyFrame","LegacyInterruptedByBanana","LegacyInterruptedByFountain","LengthExceeded","RaptorqFrame","Result","SameNumber","TransactionParsingError","UnableToDecode","UnexpectedData","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","decode_sequence","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from_mut","from_ref","get_length","get_payload","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","process_payload","provide","source","to_string","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","vzip","BananaRecovery","BananaRecovery","BananaSplitPasswordRequest","BananaSplitReady","Element","Fountain","Fountain","InProgress","LegacyMulti","LegacyMulti","None","NotYet","Ready","Yes","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","collect","collected","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","process_decoded_payload","total","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"qr_reader_phone"],[55,"qr_reader_phone::process_payload"]],"d":["","","","","","QR code handling error type.","","","","","","","","Qr code handling parsing result.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Called to inform that the packet with the id has been …","Return the number of packets collected.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[10,10,10,10,10,0,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,0,32,33,33,0,0,32,0,0,32,32,33,0,33,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,29,29,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,29,30,31,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,0,29,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31,34,32,33,29,30,31],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[[[4,[3]],[5,[3]],6],[[8,[7]]]],[9],[9],[9],[[10,11],12],[[10,11],12],[13,10],[14,10],[15,10],[[]],[[]],[[]],[[16,6],[[8,[17]]]],[[16,6],[[8,[[19,[18]]]]]],[[],9],[[]],[[[21,[20]]],[[21,[2,20]]]],[22,[[22,[2]]]],[23,[[23,[2]]]],[[]],[[]],0,[24],[10,[[5,[25]]]],[[],3],[[],26],[[],26],[[],[[26,[27]]]],[[],28],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,9]],[29,9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[29,29],6],[[30,30],6],[[31,31],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[18]],[5,[3]],32],[[8,[33]]]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],[[26,[27]]]],[[],[[26,[27]]]],[[],[[26,[27]]]],[[],[[26,[27]]]],[[],[[26,[27]]]],[[],[[26,[27]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"TransformMatrix"],[8,"Any"],[3,"String"],[15,"slice"],[4,"Option"],[15,"bool"],[4,"DecodeSequenceResult"],[6,"Result"],[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[4,"FromHexError"],[15,"str"],[15,"u32"],[15,"u8"],[3,"Vec"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Demand"],[8,"Error"],[4,"Result"],[3,"OutOfBounds"],[3,"TypeId"],[3,"Fountain"],[3,"LegacyMulti"],[3,"Element"],[4,"InProgress"],[4,"Ready"],[3,"BananaRecovery"]]},\
"qrcode_rtx":{"doc":"","t":"FFF","n":["make_data_packs","make_pretty_qr","transform_into_qr_apng"],"q":[[0,"qrcode_rtx"]],"d":["function to take data as <code>Vec&lt;u8&gt;</code>, apply <code>raptorq</code> to get …","Function to make appropriately sized qr code, apng or …","Function to transform input <code>Vec&lt;u8&gt;</code> into fountain qr-code"],"i":[0,0,0],"f":[[[[2,[1]],3],[[7,[[5,[4]],6]]]],[[[2,[1]],[9,[8]]],[[7,[[11,[10]]]]]],[[[2,[1]],3,3,[9,[8]]],[[7,[[11,[10]]]]]]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"u16"],[4,"QrData"],[3,"Vec"],[15,"str"],[4,"Result"],[3,"Path"],[8,"AsRef"],[8,"Error"],[3,"Box"]]},\
"qrcode_static":{"doc":"","t":"ENNLLLLFFLLL","n":["DataType","Regular","Sensitive","borrow","borrow_mut","from","into","png_qr","png_qr_from_string","try_from","try_into","type_id"],"q":[[0,"qrcode_static"]],"d":["What kind of data goes into QR, to additionally …","signatures for transactions and public keys export","secret keys export","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Generate static qr code from slice <code>&amp;[u8]</code>","Generate static qr code from a string.","","",""],"i":[0,3,3,3,3,3,3,0,0,3,3,3],"f":[0,0,0,[[]],[[]],[[]],[[]],[[[2,[1]],3],[[5,[[4,[1]]]]]],[[6,3],[[5,[[4,[1]]]]]],[[],7],[[],7],[[],8]],"c":[],"p":[[15,"u8"],[15,"slice"],[4,"DataType"],[3,"Vec"],[6,"Result"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"signer":{"doc":"This crate serves as interface between native frontend and …","t":"NNNENNNNNNENNNLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLOLLLLMMMMMMMMMMMMMM","n":["BananaSplit","BananaSplitWrongPassword","DbNotInitialized","ErrorDisplayed","GenericError","LoadMetaUnknownNetwork","MetadataKnown","MetadataOutdated","MutexPoisoned","NoMetadata","QrSequenceDecodeError","SpecsKnown","Str","UnknownNetwork","adapt_into_using","adapt_into_using","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","ffi_signer_2cff_rustbuffer_alloc","ffi_signer_2cff_rustbuffer_free","ffi_signer_2cff_rustbuffer_from_bytes","ffi_signer_2cff_rustbuffer_reserve","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_ref","from_ref","from_str","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","signer_destroy_string","to_string","to_string","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","unchecked_into","unchecked_into","uniffi_reexport_scaffolding","unique_saturated_into","unique_saturated_into","vzip","vzip","encryption","encryption","genesis_hash","have","name","name","name","name","name","s","version","want","s","s"],"q":[[0,"signer"],[81,"signer::ErrorDisplayed"],[93,"signer::QrSequenceDecodeError"]],"d":["","","","Container for severe error message","","Tried to load metadata for unknown network.","The metadata with this network version already in db.","Do not have an up-to-date version of metadata in db","","No metadata for a known network found in store","An error type for QR sequence decoding errors.","Tried to add specs already present in Vault.","String description of error","Tried to sign transaction with an unknown network","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Public destructor for strings managed by the other side of …","","","","","","","","","","","","","","","","","","","","","","Name of the network not known to the Vault.","","","","","Error description","","","",""],"i":[11,11,8,0,11,8,8,8,8,8,0,8,8,8,8,11,8,11,8,11,8,11,8,11,8,11,8,11,8,11,0,0,0,0,8,8,11,11,8,8,8,8,11,11,8,11,8,11,8,8,11,8,11,8,11,8,11,8,11,8,11,8,11,0,8,11,8,11,8,11,8,11,8,11,8,11,0,8,11,8,11,25,26,26,27,28,25,29,27,30,31,29,27,32,33],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[3],[3],[3],[3],[3],[3],[[4,5],6],[[6,5]],[[7,5],6],[[6,4,5],6],[[8,9],10],[[8,9],10],[[11,9],10],[[11,9],10],[12,8],[13,8],[[]],[14,8],[[]],[15,11],[[]],[[]],[[]],[[]],[16,[[17,[8]]]],[[],3],[[],3],[[]],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[[]],[[]],[[]],[[]],[22],[[],14],[[],14],[[],17],[[],17],[[],17],[[],17],[[],[[17,[23]]]],[[],[[17,[23]]]],[[],24],[[],24],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[8,"TransformMatrix"],[8,"Any"],[15,"usize"],[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[4,"ErrorDisplayed"],[3,"Formatter"],[6,"Result"],[4,"QrSequenceDecodeError"],[4,"Error"],[3,"Error"],[3,"String"],[4,"Error"],[15,"str"],[4,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"c_char"],[3,"OutOfBounds"],[3,"TypeId"],[13,"SpecsKnown"],[13,"UnknownNetwork"],[13,"MetadataOutdated"],[13,"LoadMetaUnknownNetwork"],[13,"MetadataKnown"],[13,"NoMetadata"],[13,"Str"],[13,"BananaSplit"],[13,"GenericError"]]},\
"transaction_parsing":{"doc":"","t":"NNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNGNNNNNNNENENNLLLLLLLLLLLLLLLLLAALLLLFLLLLLLLLLAFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLLLMFMLLLLLLMLFF","n":["AddSpecs","AddSpecsDifferentBase58","AddSpecsDifferentName","AddSpecsVerifierChanged","AddrNotFound","AllExtensionsParsingFailed","BadSignature","Codec","DbError","Definitions","Derivations","EncryptionNotSupported","Error","GeneralVerifierChanged","HistoricalMetadata","HistoryNetworkSpecs","ImportantSpecsChanged","LoadMeta","LoadMetaGeneralVerifierChanged","LoadMetaNoSpecs","LoadMetaSetGeneralVerifier","LoadMetaSetVerifier","LoadMetaUnknownNetwork","LoadMetaVerifierChanged","LoadMetaWrongGenesisHash","LoadTypes","Metadata","MetadataKnown","NeedGeneralVerifier","NeedVerifier","NetworkForDerivationsImport","NoMetadata","NotSubstrate","NotUtf8","Parser","ParserError","PayloadNotSupported","Read","Result","SameNameVersionDifferentMeta","SeparateMethodExtensions","Sign","Sled","SpecsCollision","SpecsKnown","Stub","StubNav","TooShort","TransactionAction","TypesKnown","UnknownNetwork","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cards","check_signature","clone","clone","clone_into","clone_into","decode_payload","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dynamic_derivations","entry_to_transactions_with_decoding","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","prepare_derivations_preview","produce_output","provide","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","base58_database","base58_input","content","content","encryption","encryption","encryption","encryption","encryption","errors","general_verifier","genesis_hash","genesis_hash","genesis_hash","genesis_hash","genesis_hash","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name_database","name_input","name_metadata","name_specs","network_name","new_general_verifier_value","new_general_verifier_value","new_general_verifier_value","new_verifier_value","new_verifier_value","new_verifier_value","old_general_verifier_value","old_general_verifier_value","old_verifier_value","old_verifier_value","valid_current_verifier","verifier_value","verifier_value","version","version","l","n","actions","checksum","content","r","s","stub","u","InfoPassedCrypto","adapt_into_using","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","message","pass_crypto","tail","try_from","try_into","try_into_color","type_id","unchecked_into","unique_saturated_into","verifier","vzip","decode_dynamic_derivations","process_dynamic_derivations"],"q":[[0,"transaction_parsing"],[159,"transaction_parsing::Error"],[211,"transaction_parsing::StubNav"],[213,"transaction_parsing::TransactionAction"],[220,"transaction_parsing::check_signature"],[250,"transaction_parsing::dynamic_derivations"]],"d":["","<code>NetworkSpecs</code> received in <code>add_specs</code> payload are for a …","<code>NetworkSpecs</code> received in <code>add_specs</code> payload are for a …","Received <code>add_specs</code> update payload is signed by …","Key corresponding to the address was not found in the db","Error parsing extensions of a signable transaction with …","Update payload signature is invalid for given public key, …","","DB error.","","","There is a limited number of encryption algorithms …","Transaction parsing error.","Received <code>add_specs</code> or <code>load_types</code> is signed by …","Network metadata needed to parse historical transaction, …","<code>OrderedNetworkSpecs</code> needed to parse historical …","<code>NetworkSpecs</code> received in <code>add_specs</code> payload are for a …","","Received <code>load_metadata</code> update payload is signed by …","User attempted to load into Vault the metadata for the …","Received <code>load_metadata</code> update payload is signed by …","Received <code>load_metadata</code> update payload is signed.","User attempted to load into Vault the metadata for the …","Received <code>load_metadata</code> update payload is signed by …","User attempted to load into Vault the metadata for the …","","","Network name and version from metadata received in …","Received update payload is not verified, although the …","Received <code>add_specs</code> or <code>load_metadata</code> update payload is not …","<code>OrderedNetworkSpecs</code> for network in which the imported …","Received transaction that should be parsed prior to …","All transactions are expected to be the Substrate ones, …","","","","There is a limited number of payloads supported by the …","","Transaction parsing result.","Network name and version from metadata received in …","Can not separate method from extensions, bad transaction.","","","More than one entry found for network specs with given <code>name</code>…","<code>NetworkSpecs</code> from the received <code>add_specs</code> payload already …","","Enum describing Stub content. Is used for proper …","Received transaction is unexpectedly short, more bytes …","Enum containing card sets for four different outcomes: …","Types information received in the <code>load_types</code> payload is …","Received signable transaction (with prelude <code>53xx00</code>, <code>53xx02</code> …","","","","","","","","","","","","","","","","","","","","","","","","Decode content of payload","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","payload that requires general verifier","payload that requires general verifier","","","","network <code>Encryption</code>","network supported encryption","","Vault general verifier","","","","genesis hash from the <code>load_metadata</code> payload, that was used …","network genesis hash","","","","","","","network name","network name","network name","network name as it is in the received metadata","network name as it is in the received metadata","network name","network name","network name","network name","network name (identical for received and for stored …","","","network name as it is in the received metadata","network name as it is in the network specs for genesis hash","","<code>VerifierValue</code> that was used to sign the update","<code>VerifierValue</code> that has signed the payload instead of the …","<code>VerifierValue</code> that was used to sign the update","<code>VerifierValue</code> for the payload","<code>VerifierValue</code> that has signed the update payload","<code>VerifierValue</code> for the payload","general verifier associated <code>VerifierValue</code> in the database","general verifier associated <code>VerifierValue</code> in the database","<code>VerifierValue</code> for the network in the database","<code>VerifierValue</code> for the network in the database","network-associated <code>ValidCurrentVerifier</code>","expected verifier for this network","<code>VerifierValue</code> currently associated with the general …","","network version (identical for received and for stored …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[5,15,15,15,15,15,15,15,15,15,4,15,0,15,15,15,15,5,15,15,15,15,15,15,15,5,15,15,15,15,15,15,15,15,15,15,15,4,0,15,15,4,15,15,15,4,0,15,0,15,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,0,0,4,5,4,5,0,15,4,5,15,4,5,15,4,5,0,0,4,5,4,5,15,15,4,5,15,15,15,15,15,15,15,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,0,0,15,15,4,5,15,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,15,4,5,43,43,44,45,46,47,48,49,50,51,52,48,43,53,54,50,55,46,47,56,57,43,49,58,59,60,52,61,62,63,64,65,53,53,54,54,51,45,63,64,59,61,62,45,64,59,62,52,58,44,56,65,66,67,68,68,69,70,71,71,71,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,40,40,40,40,40,40,40,40,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[4,4],[5,5],[[]],[[]],[6,[[8,[7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[[10,11],[[8,[[13,[12]]]]]],[[4,4],14],[[5,5],14],[[],14],[[],14],[[15,16],17],[[15,16],17],[[4,16],[[19,[18]]]],[[5,16],[[19,[18]]]],[[]],[20,15],[21,15],[22,15],[23,15],[24,15],[25,15],[26,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[28,[27]]],[[28,[3,27]]]],[[[28,[27]]],[[28,[3,27]]]],[[[28,[27]]],[[28,[3,27]]]],[29,[[29,[3]]]],[29,[[29,[3]]]],[29,[[29,[3]]]],[30,[[30,[3]]]],[30,[[30,[3]]]],[30,[[30,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,31],[[8,[[13,[32]]]]]],[[10,6],[[8,[4]]]],[33],[15,[[35,[34]]]],[[]],[[]],[[],36],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],[[19,[37]]]],[[],[[19,[37]]]],[[],[[19,[37]]]],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],[[],3],[[],3],[[]],[[]],[9],[9],[9],[[]],[[]],[[]],[[],9],[[]],[[[28,[27]]],[[28,[3,27]]]],[29,[[29,[3]]]],[30,[[30,[3]]]],[[]],[[]],0,[[6,39],[[8,[40]]]],0,[[],19],[[],19],[[],[[19,[37]]]],[[],38],[[]],[[]],0,[[]],[6,[[8,[7]]]],[[10,[41,[36,36]],6],[[8,[42]]]]],"c":[],"p":[[3,"Private"],[8,"TransformMatrix"],[8,"Any"],[4,"TransactionAction"],[4,"StubNav"],[15,"str"],[4,"DecodeSequenceResult"],[6,"Result"],[15,"usize"],[3,"Db"],[3,"Entry"],[3,"MEventMaybeDecoded"],[3,"Vec"],[15,"bool"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[4,"MetadataError"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"Utf8Error"],[4,"Error"],[4,"Error"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"ExportAddrs"],[3,"SeedKeysPreview"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"OutOfBounds"],[3,"TypeId"],[4,"TransferContent"],[3,"InfoPassedCrypto"],[3,"HashMap"],[3,"DDPreview"],[13,"AddSpecsDifferentBase58"],[13,"NeedGeneralVerifier"],[13,"GeneralVerifierChanged"],[13,"SpecsCollision"],[13,"HistoryNetworkSpecs"],[13,"UnknownNetwork"],[13,"SpecsKnown"],[13,"NetworkForDerivationsImport"],[13,"AllExtensionsParsingFailed"],[13,"LoadMetaNoSpecs"],[13,"AddSpecsDifferentName"],[13,"LoadMetaWrongGenesisHash"],[13,"HistoricalMetadata"],[13,"SameNameVersionDifferentMeta"],[13,"NoMetadata"],[13,"NeedVerifier"],[13,"AddSpecsVerifierChanged"],[13,"LoadMetaUnknownNetwork"],[13,"LoadMetaSetVerifier"],[13,"LoadMetaVerifierChanged"],[13,"LoadMetaSetGeneralVerifier"],[13,"LoadMetaGeneralVerifierChanged"],[13,"MetadataKnown"],[13,"LoadMeta"],[13,"AddSpecs"],[13,"Sign"],[13,"Derivations"],[13,"Read"],[13,"Stub"]]},\
"transaction_signing":{"doc":"","t":"NNNENNNNGDEENNNLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AddSpecs","CryptoError","DbHandling","Error","LoadMeta","LoadTypes","Message","Other","Result","SignatureAndChecksum","SignatureType","SufficientContent","Transaction","WrongPassword","WrongPasswordNewChecksum","__clone_box","__clone_box","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_signature","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","handle_sign","handle_stub","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","new_checksum","provide","sign_content","signature","signature_type","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip"],"q":[[0,"transaction_signing"]],"d":["","Error in <code>SecretString</code>.","A DB error.","Transaction signing error.","","","","","Transaction signing result.","","","Possible content to generate sufficient crypto for","","User has entered a wrong password for a passworded address.","User has entered a wrong password for a passworded address …","","","","","","","","","","","","","","","","","","","","","","","","","","","Function to create signatures using RN output action line, …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,16,16,0,5,5,4,16,0,0,0,0,4,16,16,4,5,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5,4,5,4,5,0,11,4,16,5,11,4,16,5,11,4,16,5,4,4,4,16,16,5,11,4,16,16,16,5,11,4,16,5,11,4,16,5,0,0,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5,11,16,0,11,11,16,4,5,11,16,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5,11,4,16,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[2],[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[5,5],[[]],[[]],[[6,7,7,7,8,9,10],[[12,[11]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[4,4],13],[[],13],[[4,14],15],[[16,14],15],[[16,14],15],[[5,14],15],[[]],[[]],[17,16],[18,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,8,7,7,7,9,10],[[12,[[20,[19]]]]]],[[6,8],12],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[3,21]]]],[[[22,[21]]],[[22,[3,21]]]],[[[22,[21]]],[[22,[3,21]]]],[[[22,[21]]],[[22,[3,21]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,8],[25],[[6,26,27,5,7,7],12],[11,28],[11,4],[16,[[30,[29]]]],[[]],[[]],[11,31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],[[32,[33]]]],[[],[[32,[33]]]],[[],[[32,[33]]]],[[],[[32,[33]]]],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"TransformMatrix"],[8,"Any"],[4,"SignatureType"],[4,"SufficientContent"],[3,"Db"],[15,"str"],[15,"u32"],[15,"usize"],[4,"Encryption"],[3,"SignatureAndChecksum"],[6,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[3,"Error"],[15,"u8"],[3,"Vec"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Demand"],[4,"MultiSigner"],[3,"AddressDetails"],[4,"MultiSignature"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"OutOfBounds"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
